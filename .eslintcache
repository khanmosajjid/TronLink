[{"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/index.js":"1","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/reportWebVitals.js":"2","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/App.js":"3","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/i18n.js":"4","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Main.js":"5","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/Statistics/Statistics.js":"6","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/utils/index.js":"7","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/home.js":"8","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Footer/Footer.js":"9","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/Statistics/PromotionalBanner/Promotion.js":"10","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/Statistics/Main/Main.js":"11","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Header/Header.js":"12","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Body/Body.js":"13","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Payment/Payment.js":"14","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/Statistics/Withdraw/Withdraw.js":"15","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Popup/Popup.js":"16","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Body/Cards/Cards.js":"17","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Youtube/Youtube.js":"18","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/widget/widget.js":"19","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/widget/BinaryCommisionCalc/BinaryCommision.js":"20","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/WeeklyReport/WeeklyReport.js":"21","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/WeeklyReport/Main/Main.js":"22","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/WeeklyReport/PromotionalBanner/Promotion.js":"23","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/WeeklyReport/Withdraw/Withdraw.js":"24","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/firebaseConfig.js":"25"},{"size":648,"mtime":1609615315014,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1608544534902,"results":"28","hashOfConfig":"27"},{"size":14354,"mtime":1610310448479,"results":"29","hashOfConfig":"27"},{"size":103799,"mtime":1609881063313,"results":"30","hashOfConfig":"27"},{"size":991,"mtime":1610198675605,"results":"31","hashOfConfig":"27"},{"size":1694,"mtime":1609629162008,"results":"32","hashOfConfig":"27"},{"size":419,"mtime":1610358558156,"results":"33","hashOfConfig":"27"},{"size":625,"mtime":1610198683589,"results":"34","hashOfConfig":"27"},{"size":776,"mtime":1610196732229,"results":"35","hashOfConfig":"27"},{"size":3789,"mtime":1609693727960,"results":"36","hashOfConfig":"27"},{"size":20152,"mtime":1610214795523,"results":"37","hashOfConfig":"27"},{"size":7915,"mtime":1610229276698,"results":"38","hashOfConfig":"27"},{"size":8859,"mtime":1610229327514,"results":"39","hashOfConfig":"27"},{"size":9485,"mtime":1610188581997,"results":"40","hashOfConfig":"27"},{"size":1487,"mtime":1609629935499,"results":"41","hashOfConfig":"27"},{"size":379,"mtime":1608912925012,"results":"42","hashOfConfig":"27"},{"size":1923,"mtime":1610202754162,"results":"43","hashOfConfig":"27"},{"size":2813,"mtime":1610188582001,"results":"44","hashOfConfig":"27"},{"size":4683,"mtime":1609785288819,"results":"45","hashOfConfig":"27"},{"size":1150,"mtime":1609785635016,"results":"46","hashOfConfig":"27"},{"size":2887,"mtime":1610318964462,"results":"47","hashOfConfig":"27"},{"size":19925,"mtime":1610214817415,"results":"48","hashOfConfig":"27"},{"size":3789,"mtime":1610214468170,"results":"49","hashOfConfig":"27"},{"size":1487,"mtime":1610214468274,"results":"50","hashOfConfig":"27"},{"size":437,"mtime":1610308535584,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1luz6ym",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/index.js",[],["119","120"],"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/reportWebVitals.js",[],"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/App.js",["121","122","123"],"import \"./App.css\";\n\nimport Main from \"./components/Main\";\nimport Statistics from \"./Statistics/Statistics\";\nimport WeeklyReport from \"./WeeklyReport/WeeklyReport\"\nimport Utils from \"./utils\";\nimport { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './i18n';\n\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      totalUsers: 0,\n      activeDeposits:[],\n      expiredDeposits:[],\n      levelTree:[],\n      tronWeb: {\n        installed: false,\n        loggedIn: false,\n      },\n      account: \"\",\n      // levels: [],\n    };\n    this.fetchPlatformData = this.fetchPlatformData.bind(this);\n    this.getLevelWiseCount = this.getLevelWiseCount.bind(this);\n    this.invest = this.invest.bind(this);\n    this.withdraw = this.withdraw.bind(this);\n    this.makeRoundOf = this.makeRoundOf.bind(this);\n  }\n\n  parseParams() {\n    let ref\n    function getUrlVars() {\n      var vars = [],\n        hash;\n      var hashes = window.location.href\n        .slice(window.location.href.indexOf(\"?\") + 1)\n        .split(\"&\");\n      for (var i = 0; i < hashes.length; i++) {\n        hash = hashes[i].split(\"=\");\n        vars.push(hash[0]);\n        vars[hash[0]] = hash[1];\n      }\n      return vars;\n    }\n     ref = getUrlVars()[\"ref\"];\n    if(ref!=null){\n      localStorage.setItem(\"ref\",ref);\n    }\n    console.log(\"ref\", ref);\n    \n  }\n  \n \n\n  makeRoundOf(num) {\n    return (num / 10 ** 6).toFixed(2);\n  }\n\n  async componentDidMount() {\n    await this.initTron();\n\n    this.startDataWatchman()\n  \n\n\n   \n    \n  }\n\n\n  startDataWatchman(){\n    let interval = setInterval(()=>{\n        if(this.state.account && this.state.contract){\n          this.refreshUserData(this.state.account)\n        }\n    },1000)\n  }\n\n  async initTron() {\n    // await new Promise((resolve) => {\n    //   const tronWebState = {\n    //     installed: !!window.tronWeb,\n    //     loggedIn: window.tronWeb && window.tronWeb.ready,\n    //   };\n\n    //   if (tronWebState.installed) {\n    //     this.setState({\n    //       tronWeb: tronWebState,\n    //     });\n\n    //     return resolve();\n    //   }\n\n    //   let tries = 0;\n\n    //   const timer = setInterval(() => {\n    //     if (tries >= 10) {\n    //       const TRONGRID_API = \"https://api.shasta.trongrid.io\";\n\n    //       window.tronWeb = new TronWeb(\n    //         TRONGRID_API,\n    //         TRONGRID_API,\n    //         TRONGRID_API\n    //       );\n\n    //       this.setState({\n    //         tronWeb: {\n    //           installed: false,\n    //           loggedIn: false,\n    //         },\n    //       });\n\n    //       clearInterval(timer);\n    //       return resolve();\n    //     }\n\n    //     tronWebState.installed = !!window.tronWeb;\n    //     tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n    //     if (!tronWebState.installed) return tries++;\n\n    //     this.setState({\n    //       tronWeb: tronWebState,\n    //     });\n\n    //     resolve();\n    //   }, 100);\n    // });\n\n\n\n    \n    await new Promise(resolve => {\n      const tronLoader = setInterval( async () => {\n        if (window.tronWeb && window.tronWeb.ready) {\n          await Utils.setTronWeb(window.tronWeb);\n          this.setState({ account: window.tronWeb.defaultAddress.base58,\n            contract: Utils.contract });\n          clearInterval(tronLoader)\n\n          // this.getUserInfo(window.tronWeb.defaultAddress.base58);\n          // this.fetchPlatformData();\n          // this.parseParams();\n\n\n          this.refreshUserData(window.tronWeb.defaultAddress.base58)\n          console.log(\"window.tronWeb.defaultAddress.base58 ,\",window.tronWeb.defaultAddress.base58 )\n          resolve()\n        }\n      }, 500)\n    });\n\n\n   \n\n   \n\n  }\n\n\n  async refreshUserData(walletAdd){\n    this.getUserInfo(walletAdd);\n    this.fetchPlatformData();\n    this.parseParams();\n  }\n\n  //refferer\n  async invest(entryFees) {\n    this.setState({ loading: true });\n    let ref=Utils.adminAddress;\n    let  localStorageId=localStorage.getItem('ref');\n    if(localStorageId){\n           ref=localStorageId;\n    }\n\n\n\n    console.log(\"refADDDD\",ref,localStorageId)\n    Utils.contract\n      .invest(ref)\n      .send({\n        from: window.tronWeb.defaultAddress.base58,\n        callValue: entryFees * 1000000,\n        shouldPollResponse: true,\n      })\n      .then((receipt) => {\n        console.log(\"success\");\n        console.log(receipt);\n      })\n      .catch((err) => {\n        console.log(\"error while investing\", err);\n      });\n  }\n\n\n\n  async getMyDeposits(address,maxDeposit){\n\n    let activeDeposits =[]\n    let expiredDeposits = []\n\n    for(let i = 0;i<maxDeposit;i++){\n\n      let deposit = await this.getMyDeposit(address,i)\n      console.log(\"depoistPre\",deposit,);\n      if(deposit){\n        if(deposit.isExpired){\n          expiredDeposits.push(deposit)\n        }else{\n          activeDeposits.push(deposit)\n\n        }\n      }\n\n     \n    }\n\n\n    this.setState({activeDeposits,expiredDeposits})\n  }\n\n\n\n\n  async getMyDeposit(add,index){\n\n    console.log(\"getMyDeposit\", Utils.contract)\n    let deposit = await  Utils.contract.getUserDepositInfo(add,index).call();\n    console.log(\"deposi\",deposit)\n    if(deposit){\n      let payload = {\n        id:index,\n        date:deposit._start.toNumber(),\n        amount:deposit._amount.toNumber()/10**6,\n        withdrawn:deposit._withdrawn.toNumber()/10**6,\n        isExpired:deposit._isExpired\n      }\n      console.log(\"depoist\",payload)\n\n      return payload\n    }\n     \n  }\n\n  async fetchPlatformData() {\n\n\n\n\n\n    let totalUsers = (\n      await Utils.contract.getTotalVolume().call()\n    ).toNumber();\n\n\n    console.log(\"users123\", totalUsers);\n    let totalDepositAmount = (\n      await Utils.contract.getTotalDepositsAmount().call()\n    ).toNumber();\n    totalDepositAmount = this.makeRoundOf(totalDepositAmount);\n    console.log(totalDepositAmount + \"it is total ammmount\");\n    let totalWithdrawn = (\n      await Utils.contract.getTotalWithdrawn().call()\n    ).toNumber();\n    totalWithdrawn = this.makeRoundOf(totalWithdrawn);\n    console.log(totalWithdrawn, \" is total Withdrawn\");\n    let tradingPool = (\n      await Utils.contract.getAmountInTradingPool().call()\n    ).toNumber();\n    tradingPool = this.makeRoundOf(tradingPool);\n\n    let payload = {\n      totalUsers: totalUsers,\n      totalDepositAmount: totalDepositAmount,\n      totalWithdrawn: totalWithdrawn,\n      tradingPool: tradingPool,\n    };\n    this.setState(payload);\n  }\n\n  async getUserInfo(addr) {\n\n    console.log(\"fdfdd\",addr)\n    let userDailyProfit =  await Utils.contract.getUserDailyProfit(addr).call();\n    if(userDailyProfit){\n      userDailyProfit = userDailyProfit.toNumber()\n    }else{\n      userDailyProfit = 0\n    }\n    console.log(\"daily\", userDailyProfit);\n    let getBinaryBalanceLeftForWithdrawl = (\n      await Utils.contract.getBinaryBalanceLeftForWithdrawl(addr).call()\n    ).toNumber();\n\n\n    getBinaryBalanceLeftForWithdrawl = this.makeRoundOf(\n      getBinaryBalanceLeftForWithdrawl\n    );\n\n\n    // userDailyProfit = this.makeRoundOf(userDailyProfit)+getBinaryBalanceLeftForWithdrawl;\n    userDailyProfit = this.makeRoundOf(userDailyProfit);\n\n\n    console.log(\"getBinaryBalanceLeftForWithdrawl\",getBinaryBalanceLeftForWithdrawl)\n    \n    \n    \n    \n    \n    const userPersonalDepositProfit =\n      (await Utils.contract.getExtraProfit(addr).call()).toNumber() / 100;\n    let totalEarnedFromDailyProfit = (\n      await Utils.contract.totalEarnedFromDailyProfit(addr).call()\n    ).toNumber();\n    totalEarnedFromDailyProfit = this.makeRoundOf(totalEarnedFromDailyProfit);\n    let totalReferralCommissionEarned = (\n      await Utils.contract.getTotalReferralCommissionEarned(addr).call()\n    ).toNumber();\n    totalReferralCommissionEarned = this.makeRoundOf(\n      totalReferralCommissionEarned\n    );\n    const referralLevelsUnlocked = (\n      await Utils.contract.getReferralsLevelsUnlocked(addr).call()\n    ).toNumber();\n    let totalTeamDepositVolume = (\n      await Utils.contract.getTotalTeamDepositVolume(addr).call()\n    ).toNumber();\n    totalTeamDepositVolume = this.makeRoundOf(totalTeamDepositVolume);\n    console.log(\"total team deposit vol\", totalTeamDepositVolume);\n    let binaryCommissionEarnedSoFar = (\n      await Utils.contract.getBinaryCommissionEarnedSoFar(addr).call()\n    ).toNumber();\n    binaryCommissionEarnedSoFar = this.makeRoundOf(binaryCommissionEarnedSoFar);\n    const referrals = (\n      await Utils.contract.getReferrals(addr).call()\n    ).toNumber();\n    const totalTeamMembers = (\n      await Utils.contract.getTotalTeamMembers(addr).call()\n    ).toNumber();\n\n    let userTotalActiveDeposits = (\n      await Utils.contract.getUserTotalActiveDeposits(addr).call()\n    ).toNumber();\n    userTotalActiveDeposits = this.makeRoundOf(userTotalActiveDeposits);\n    const noOfTotalDeposits = (\n      await Utils.contract.getUserTotalNumberOfDeposits(addr).call()\n    ).toNumber();\n    let userTotalDeposits = (\n      await Utils.contract.getUserTotalDeposits(addr).call()\n    ).toNumber();\n    userTotalDeposits = this.makeRoundOf(userTotalDeposits);\n    let payload = {\n      userTotalDeposits: userTotalDeposits,\n      userTotalActiveDeposits: userTotalActiveDeposits,\n      noOfTotalDeposits: noOfTotalDeposits,\n      userDailyProfit: userDailyProfit,\n      userPersonalDepositProfit: userPersonalDepositProfit,\n      totalEarnedFromDailyProfit: totalEarnedFromDailyProfit,\n      totalReferralCommissionEarned: totalReferralCommissionEarned,\n      referralLevelsUnlocked: referralLevelsUnlocked,\n      totalTeamDepositVolume: totalTeamDepositVolume,\n      binaryCommissionEarnedSoFar: binaryCommissionEarnedSoFar,\n      referrals: referrals,\n      totalTeamMembers: totalTeamMembers,\n    };\n    console.log(\"Payload is \", payload);\n    let contractBalance = (\n      await Utils.contract.getContractBalance().call()\n    ).toNumber();\n    contractBalance = this.makeRoundOf(contractBalance);\n    console.log(\"contract balance\", contractBalance);\n    this.setState({...this.state,payload});\n\n    this.getMyDeposits(window.tronWeb.defaultAddress.base58,noOfTotalDeposits);\n\n    let levelTree = []\n    for (var i = 0; i < 10; i++) {\n      let result = await this.getLevelWiseCount(this.state.account, i + 1);\n      console.log(result, \" level\", i + 1, \"-----\");\n\n      if(!result){\n        result = 0\n      }\n      let payload = {\n        levelNumber:i+1,\n        members:result\n\n      }\n\n      levelTree.push(payload)\n\n    }\n\n\n\n    this.setState({levelTree})\n\n\n\n\n\n  }\n\n  async getLevelWiseCount(addr, level) {\n    const levelWiseCount = (\n      await Utils.contract.getLevelWiseCount(addr, level).call()\n    ).toNumber();\n    return levelWiseCount;\n  }\n\n  async withdraw() {\n    Utils.contract\n      .withdraw()\n      .send({ from: window.tronWeb.defaultAddress.base58, callValue: 0 })\n      .then((res) => {\n        if (res == true) console.log(\"success\");\n      })\n      .catch((err) => {\n        console.log(\"error while withdrawing\", err);\n      });\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Main\n                totalDepositAmount={this.state.totalDepositAmount}\n                totalMembers={this.state.totalUsers}\n                totalWithdraw={this.state.totalWithdrawn}\n                tradingPool={this.state.tradingPool}\n              />\n            </Route>\n\n            <Route exact path=\"/stats\">\n              <Statistics\n                activeDeposits={this.state.activeDeposits}\n                expiredDeposits={this.state.expiredDeposits}\n                levelTree={this.state.levelTree}\n                userTotalDeposits={this.state.userTotalDeposits}\n                invest={this.invest}\n                totalEarnedFromDailyProfit={\n                  this.state.totalEarnedFromDailyProfit\n                }\n                totalReferralCommissionEarned={\n                  this.state.totalReferralCommissionEarned\n                }\n                referralLevelsUnlocked={this.state.referralLevelsUnlocked}\n                totalTeamDepositVolume={this.state.totalTeamDepositVolume}\n                binaryCommissionEarnedSoFar={\n                  this.state.binaryCommissionEarnedSoFar\n                }\n                referrals={this.state.referrals}\n                totalTeamMembers={this.state.totalTeamMembers}\n                withdraw={this.withdraw}\n                userDailyProfit={this.state.userDailyProfit}\n                userPersonalDepositProfit={this.state.userPersonalDepositProfit}\n                userTotalActiveDeposits={this.state.userTotalActiveDeposits}\n                noOfTotalDeposits={this.state.noOfTotalDeposits}\n                account={this.state.account}\n              />\n            </Route>\n        \n\n            <Route exact path=\"/weeklyreports\">\n              <WeeklyReport\n                activeDeposits={this.state.activeDeposits}\n                expiredDeposits={this.state.expiredDeposits}\n                levelTree={this.state.levelTree}\n                userTotalDeposits={this.state.userTotalDeposits}\n                invest={this.invest}\n                totalEarnedFromDailyProfit={\n                  this.state.totalEarnedFromDailyProfit\n                }\n                totalReferralCommissionEarned={\n                  this.state.totalReferralCommissionEarned\n                }\n                referralLevelsUnlocked={this.state.referralLevelsUnlocked}\n                totalTeamDepositVolume={this.state.totalTeamDepositVolume}\n                binaryCommissionEarnedSoFar={\n                  this.state.binaryCommissionEarnedSoFar\n                }\n                referrals={this.state.referrals}\n                totalTeamMembers={this.state.totalTeamMembers}\n                withdraw={this.withdraw}\n                userDailyProfit={this.state.userDailyProfit}\n                userPersonalDepositProfit={this.state.userPersonalDepositProfit}\n                userTotalActiveDeposits={this.state.userTotalActiveDeposits}\n                noOfTotalDeposits={this.state.noOfTotalDeposits}\n                account={this.state.account}\n              />\n            </Route>\n        \n        \n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/i18n.js",[],"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Main.js",["124"],"import React, { Component } from 'react';\nimport './Main.scss';\nimport Header from './Header/Header';\nimport Home from './home';\nimport Footer from './Footer/Footer';\n\nexport default class Main extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\t//   componentWillReceiveProps(props) {\n\t//     console.log(\n\t//       \"this is main props \",\n\t//       props.totalDepositAmount,\n\t//       props.totalMembers,\n\t//       props.totalWithdraw\n\t//     );\n\t//   }\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t{/* {console.log(this.props.data + \" this is main state\")} */}\n\t\t\t\t<Header background=\"#05133a\" />\n\t\t\t\t<Home\n\t\t\t\t\ttotalDepositAmount={this.props.totalDepositAmount ? this.props.totalDepositAmount : '-'}\n\t\t\t\t\ttotalMembers={this.props.totalMembers ? this.props.totalMembers : '-'}\n\t\t\t\t\ttotalWithdraw={this.props.totalWithdraw ? this.props.totalWithdraw : '-'}\n\t\t\t\t\tinvest={this.props.invest}\n\t\t\t\t\ttradingPool={this.props.tradingPool}\n\t\t\t\t/>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/Statistics/Statistics.js",["125"],"import React, { Component } from 'react';\nimport './Statistics.scss';\nimport Header from '../components/Header/Header';\nimport Main from './Main/Main';\nimport Promotional from './PromotionalBanner/Promotion';\nimport Footer from '../components/Footer/Footer';\nimport { Trans } from 'react-i18next';\n\nexport default class LandingPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"header-component\">\n\t\t\t\t\t<Header backgroundImage=\"#00000000\"/>\n\t\t\t\t\t<h1><Trans>User Statistics</Trans></h1>\n\t\t\t\t</div>\n\n\t\t\t\t<Main\n\t\t\t\t  activeDeposits={this.props.activeDeposits}\n\t\t\t\t  expiredDeposits={this.props.expiredDeposits}\n\t\t\t\t  levelTree = {this.props.levelTree}\n\t\t\t\t\tuserTotalDeposits={this.props.userTotalDeposits}\n\t\t\t\t\tinvest={this.props.invest}\n\t\t\t\t\tuserTotalActiveDeposits={this.props.userTotalActiveDeposits}\n\t\t\t\t\tnoOfTotalDeposits={this.props.noOfTotalDeposits}\n\t\t\t\t\ttotalEarnedFromDailyProfit={this.props.totalEarnedFromDailyProfit}\n\t\t\t\t\ttotalReferralCommissionEarned={this.props.totalReferralCommissionEarned}\n\t\t\t\t\treferralLevelsUnlocked={this.props.referralLevelsUnlocked}\n\t\t\t\t\ttotalTeamDepositVolume={this.props.totalTeamDepositVolume}\n\t\t\t\t\tbinaryCommissionEarnedSoFar={this.props.binaryCommissionEarnedSoFar}\n\t\t\t\t\treferrals={this.props.referrals}\n\t\t\t\t\ttotalTeamMembers={this.props.totalTeamMembers}\n\t\t\t\t\twithdraw={this.props.withdraw}\n\t\t\t\t\tuserDailyProfit={this.props.userDailyProfit}\n                    userPersonalDepositProfit={this.props.userPersonalDepositProfit}\n                    account={this.props.account}\n\t\t\t\t/>\n\t\t\t\t<Promotional                     account={this.props.account}\n/>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/utils/index.js",[],"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/home.js",["126","127","128","129"],"import React, { Component } from 'react';\nimport './home.css';\nimport Header from './Header/Header';\nimport Body from './Body/Body';\nimport { Row, Col } from 'reactstrap';\n\nimport Payment from './Payment/Payment';\n\nexport default class Home extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"home\">\n\t\t\t\t<Body\n\t\t\t\t\ttotalDepositAmount={this.props.totalDepositAmount}\n\t\t\t\t\ttotalMembers={this.props.totalMembers}\n\t\t\t\t\ttotalWithdraw={this.props.totalWithdraw}\n\t\t\t\t\tinvest={this.props.invest}\n\t\t\t\t\ttradingPool={this.props.tradingPool}\n\t\t\t\t/>\n\n\t\t\t\t<Payment />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Footer/Footer.js",["130"],"import React, { Component } from 'react';\nimport { Container, Row } from 'reactstrap';\nimport './Footer.scss';\nimport logo from '../../assets/logo.png'\nimport utils from \"../../utils\"\nexport default class Footer extends Component {\n    render(){\n        return(\n            <Container fluid={true} className=\"footer\">\n                <Row className=\"footer-row\">\n                    <img src={logo} alt=\"logo\"></img>\n\n                </Row>\n                <div className=\"footer-copyright\">\n                    Copyright @ 2020 All Rights Reserved | {\" \"}\n                    <a  target=\"_blank\" \n                    href={\"https://tronscan.org/#/contract/\"+utils.contractAddress}>{utils.contractAddress}</a>\n                </div>\n\n            </Container>\n        )\n    }\n}","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/Statistics/PromotionalBanner/Promotion.js",["131","132","133","134"],"import React, { Component } from \"react\";\nimport { Container, Row, Input, Label,Button } from \"reactstrap\";\nimport \"./Promotion.scss\";\nimport banner1 from \"../../assets/banner1.png\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport smallBanner from \"../../assets/smallBanner.gif\"\nimport mediumBanner from \"../../assets/mediumBanner.gif\"\nimport largeBanner from \"../../assets/largeBanner.gif\"\nimport { Trans } from 'react-i18next';\n\nexport default class Promotion extends Component {\n\n\n  constructor(props){\n    super(props)\n    this.copyClipboard=this.copyClipboard.bind(this);\n    // this.getMyRefLink=this.getMyRefLink.bind(this)\n    this.state={\n      largeBannerCode:\"\",\n      mediumBannerCode:\"\",\n      smallBannerCode:\"\",\n\n    }\n  }\n   copyClipboard(code) {\n    var textField = document.createElement(\"textarea\");\n    textField.innerText = code\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand(\"copy\");\n    textField.remove();\n   \n\n    // setCopySuccess(\"Copied!\");\n    toast.success(\"Referral Link Copied\");\n  }\n\n\n  getSmallBannerCode(){\n    if(this.props.account){\n      return '<a href=\"'+this.getMyRefLink()+'\"> <img style=\"height:125px;width:125px\" src=\"https://trontiply.com/static/media/smallBanner.fd5be3a4.gif\"/> </a>'\n    }\n  }\n\n\n\n  getMediumBannerCode(){\n    if(this.props.account){\n      return '<a href=\"'+this.getMyRefLink()+'\"> <img  style=\"height:60px;width:468px\" src=\"https://trontiply.com/static/media/mediumBanner.700dca68.gif\"/> </a>'\n    }\n  }\n\n\n\n  getLargeBannerCode(){\n    if(this.props.account){\n      return '<a href=\"'+this.getMyRefLink()+'\"> <img   style=\"height:90px;width:728px\" src=\"https://trontiply.com/static/media/largeBanner.a434eb19.gif\"/> </a>'\n    }\n  }\n\n\n  getMyRefLink=()=>{\n    if(this.props.account){\n      return \"https://trontiply.com/?ref=\"+this.props.account\n    }\n  }\n\n\n\n\n\n\n\n  render() {\n    return (\n      <Container className=\"promotion\">\n        <h1><Trans>Promotional Banners</Trans></h1>\n        <src></src>\n        <img className=\"image-1\" src={largeBanner} style={{marginTop: \"25px\",\n        height:\"auto\",\n        width:\"80%\"\n      }}></img>\n        <Row className=\"input-bar\">\n          <Label for=\"amount\"></Label>\n          <Input\n            type=\"text\"\n            name=\"amount\"\n            className=\"input-box\"\n            value={this.getLargeBannerCode()}\n\n          />\n     \n          <Button className=\"promotion__button\" onClick={()=>{\n            this.copyClipboard(this.getLargeBannerCode())\n          }}><Trans>Copy</Trans></Button>\n        </Row>\n\n        <img className=\"image-1\" src={mediumBanner} style={{height:\"auto\",\n          // width:468,\n          width:\"60%\"\n\n          }}></img>\n        <Row className=\"input-bar\">\n          <Label for=\"amount\"></Label>\n          <Input\n            type=\"text\"\n            name=\"amount\"\n            value={this.getMediumBannerCode()}\n            className=\"input-box\"\n          />\n          <Button className=\"promotion__button\" onClick={()=>{\n            this.copyClipboard(this.getMediumBannerCode())\n          }}><Trans>Copy</Trans></Button>\n        </Row>\n        \n\n\n\n\n\n        <img  src={smallBanner} style={{height:\"auto\",width:125}}></img>\n        <Row className=\"input-bar\">\n          <Label for=\"amount\"></Label>\n          <Input\n            type=\"text\"\n            name=\"amount\"\n            value={this.getSmallBannerCode()}\n            className=\"input-box\"\n          />\n          <Button className=\"promotion__button\" onClick={()=>{\n            this.copyClipboard(this.getSmallBannerCode())\n          }}><Trans>Copy</Trans></Button>\n        </Row>\n        \n        \n        \n        \n        <ToastContainer/>\n        \n      </Container>\n    );\n  }\n}\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/Statistics/Main/Main.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149"],"import React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Container, Row, Col, Label, Input, Button, Table } from \"reactstrap\";\nimport \"./Main.scss\";\nimport { Icon } from \"semantic-ui-react\";\nimport Withdraw from \"../Withdraw/Withdraw\";\nimport icon1 from \"../../assets/icon1.png\";\nimport icon2 from \"../../assets/icon2.png\";\nimport icon3 from \"../../assets/icon3.png\";\nimport icon4 from \"../../assets/icon4.png\";\nimport icon5 from \"../../assets/icon5.png\";\nimport icon6 from \"../../assets/icon6.png\";\nimport icon7 from \"../../assets/icon7.png\";\nimport icon8 from \"../../assets/icon8.png\";\nimport icon9 from \"../../assets/icon9.png\";\nimport icon10 from \"../../assets/icon10.png\";\nimport icon11 from \"../../assets/icon11.png\";\nimport deposit from \"../../assets/deposit.png\";\nimport QRCode from \"qrcode.react\";\nimport reff_icon from \"../../assets/reff-icon.png\";\n// import money_transfer from \"../../assets/money-transfer.png\";\nimport money_transfer from \"../../assets/network.png\";\nimport { Trans } from 'react-i18next';\nimport utils from \"../../utils\"\nimport Popup from \"../../components/Popup/Popup\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Card from \"../../components/Body/Cards/Cards\";\nimport moment from \"moment\";\nimport reff_bg from \"../../assets/reff-bg.png\";\n\nconst levelColors = [\n  \"#0492ff\",\n  \"#ff3956\",\n  \"#ff9600\",\n  \"#51ce91\",\n  \"#0492ff\",\n  \"#ff3c5e\",\n  \"#ff9600\",\n  \"#51ce91\",\n  \"#ff3c5e\",\n];\nfunction Main(props) {\n  const [activeDeposits, setActiveDeposits] = useState([]);\n\n  const [expiredDeposits, setExpiredDeposits] = useState([]);\n  const [tableData, setTableData] = useState(false);\n  const [walletAddress, setWalletAddress] = useState(false);\n\n  const getReadableTime = (time) => {\n    return moment(time * 1000).format(\"DD/MMM/YYYY\");\n  };\n\n  useEffect(() => {\n    setActiveDeposits(props.activeDeposits);\n  }, [props.activeDeposits]);\n\n  useEffect(() => {\n    setLevelTree(props.levelTree);\n  }, [props.levelTree]);\n\n  useEffect(() => {\n    setWalletAddress(props.account);\n    setRefLink(getMyRefLink(props.account));\n    console.log(\"pros.accout\", props.account);\n  }, [props.account]);\n\n  useEffect(() => {\n    setExpiredDeposits(props.expiredDeposits);\n  }, [props.expiredDeposits]);\n  const [levelTree, setLevelTree] = useState([]);\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [depositAmount, setDepositAmount] = useState(0);\n  const [tableHeading, setTableHeading] = useState(\"Active Deposit\");\n  const [isActiveDepositTableActive, setActiveDepositTableActive] = useState(\n    false\n  );\n  const [copySuccess, setCopySuccess] = useState(\"\");\n  const [refLink, setRefLink] = useState();\n  const [tableStartColor, setTableStartColor] = useState(\"\");\n  const [tableEndColor, setTableEndColor] = useState(\"\");\n  const [tableHeaderStartColor, setTableHeaderStartColor] = useState(\"\");\n  const [tableHeaderEndColor, setTableHeaderEndColor] = useState(\"\");\n  const textAreaRef = useRef(null);\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const renderLevelTree = () => {\n    let tree = [];\n\n    for (let level of levelTree) {\n      tree.push(\n        // <Col lg={2} xs={3} className=\"box\">\n        //   Level {level.levelNumber} | Members {level.members}\n        // </Col>\n\n        <Col lg={3} style={{ marginBottom: \"2%\", fontWeight: \"600\" }}>\n          <p>\n            Level {level.levelNumber} =\n            <span\n              style={{\n                color: levelColors[level.levelNumber - 1],\n                fontWeight: \"600\",\n              }}\n            >\n              {\" \"}\n              Members {level.members}\n            </span>\n          </p>\n        </Col>\n      );\n      // console.log(\"level\");\n    }\n    // console.log(\"hello\");\n    <h1>hello i am level</h1>;\n    return tree;\n  };\n\n  const getLevelRank = () => {\n    let number = props.referralLevelsUnlocked;\n    //TODO 1\n    if (number <= 3) {\n      return \"Starter\";\n    } else if (number <= 4) {\n      return \"Bronze\";\n    } else if (number <= 5) {\n      return \"Platinum\";\n    } else if (number <= 6) {\n      return \"Premium\";\n    } else if (number <= 7) {\n      return \"Titanium\";\n    } else if (number <= 8) {\n      return \"Gold\";\n    } else if (number <= 9) {\n      return \"Diamond\";\n    } else if (number <= 10) {\n      return \"Super Gold\";\n    }\n  };\n  function copyToClipboard(e) {\n    var textField = document.createElement(\"textarea\");\n    textField.innerText = refLink;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand(\"copy\");\n    textField.remove();\n\n    setCopySuccess(\"Copied!\");\n    toast.success(\"Referral Link Copied\");\n  }\n\n  const renderDepositTableItem = () => {\n    let items = [];\n\n    let data = [];\n\n    if (isActiveDepositTableActive) {\n      data = [...activeDeposits];\n    } else {\n      data = [...expiredDeposits];\n    }\n\n    for (let item of data) {\n      items.push(\n        <tr>\n          <td style={{color:\"#000\"}}>{getReadableTime(item.date)}</td>\n          <td style={{color:\"#000\"}}>{item.amount}</td>\n\n          <td style={{color:\"#000\"}}>{item.withdrawn}</td>\n        </tr>\n      );\n    }\n\n    if (items.length == 0) {\n      // setTableData(true)\n      console.log(tableData);\n      return <h3>No data</h3>;\n    } else {\n      return items;\n    }\n  };\n\n  const getMyRefLink = (addr) => {\n    return \"https://trontiply.com/?ref=\" + addr;\n  };\n\n  const getIfHideTable = () => {\n    if (isActiveDepositTableActive) {\n      if (activeDeposits.length == 0) {\n        return true;\n      }\n    } else {\n      if (expiredDeposits.length == 0) {\n        return true;\n      }\n    }\n  };\n  const makeDeposit = () => {\n    // let depositAmount = depositAmount;\n\n    //todo 1000 krna h\n    if (depositAmount < 100) {\n      //Show error\n\n      toast.error(\"Minimum Deposit Amount is 100trx!\");\n    } else {\n      makeDepositTransaction(depositAmount);\n    }\n  };\n\n  const makeDepositTransaction = (amount) => {\n    console.log(\"propos12\", amount);\n    props.invest(amount);\n  };\n\n  return (\n    <div className=\"main\">\n      <Row className=\"main__resultcard\">\n\n        <Row className=\"total-result1\">\n\n\n          \n          <Col lg={2} sm={2} md={2} className=\"card1\">\n            {refLink ? <QRCode value={refLink} /> : null}\n          </Col>\n          <Col lg={10}  sm={10}  md={10}className=\"card2\">\n            <Row className=\"ref-main\">\n              <Col lg={2} xs={4} >\n               <div className=\"refferal-logo\">\n               <img  \n                  src={reff_icon}\n                  style={{\n                    height: \"55px\",\n                    width: \"55px\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    display: \"block\",\n                  }}\n                ></img>\n               </div>\n              </Col>\n\n              <Col lg={10} className=\"input-col\">\n                {/* <img src={reff_bg}></img> */}\n                <Label for=\"amount\"></Label>\n                <Row>\n                  <Col lg={12} style={{ display: \"flex\" }}>\n                    <Input\n                      onChange={(t) => {\n                        // setDepositAmount(t.target.value);\n                      }}\n                      type=\"text\"\n                      name=\"amount\"\n                      id=\"amount\"\n                      value={refLink}\n                      className=\"ref-input\"\n                      placeholder=\"Enter Amount\"\n                    />\n                    <Button className=\"ref-copy\" onClick={copyToClipboard}>\n                      <h5><Trans>Copy</Trans></h5>\n                    </Button>\n                  </Col>\n                </Row>\n\n                {/* <h3>Refferral Link</h3>\n                <div className=\"volume\"> */}\n                {/* <textarea\n                  id=\"link\"\n                  style={{ margin: \"0px\", color: \"white\", fontWeight: \"600\",width:\"100%\" }}\n                  ref={textAreaRef}\n                  onClick={copyToClipboard}\n                  value={refLink}\n                > */}\n\n                {/* <h4\n                    onClick={() => {\n                      copyToClipboard();\n                    }}\n                    id=\"link\"\n                  >\n                    {refLink}\n                  </h4> */}\n\n                {/* </textarea> */}\n                {/* </div> */}\n                {/* <div className=\"volume2\">\n                 \n                </div> */}\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Row>\n     \n      <Row className=\"main__deposit\">\n        <div className=\"deposit-icon\">\n          <img src={deposit}></img>\n        </div>\n\n        <h6><Trans>Make A Deposit</Trans></h6>\n        <Label for=\"amount\"></Label>\n        <Input\n          onChange={(t) => {\n            setDepositAmount(t.target.value);\n          }}\n          type=\"text\"\n          name=\"amount\"\n          id=\"amount\"\n          value={depositAmount}\n          className=\"input-box\"\n          placeholder=\"Enter Amount\"\n        />\n        <Button\n          className=\"deposit__button\"\n          onClick={() => {\n            // props.invest(document.getElementById(\"amount\").value);\n            makeDeposit();\n          }}\n        >\n          <Trans>Confirm Deposit</Trans>\n        </Button>\n      </Row>\n     \n     \n\n\n      \n     \n     \n     \n     \n      <Row className=\"cards\">\n\n  \n        \n     <Card\n          card1Name=\"Your Daily Profit\"\n          card2Name=\"Basic Profit\"\n          card3Name=\"Personal Deposit Bonus\"\n          card4Name=\"Available Account Balance\"\n          card1Data={\n            props.userPersonalDepositProfit?\n            (1.2 + parseFloat(props.userPersonalDepositProfit)).toFixed(2) +\n            \" %\":\"-\"\n          }\n          card2Data=\"1.20%\"\n          card3Data={props.userPersonalDepositProfit?props.userPersonalDepositProfit:\"-\"}\n          card4Data={props.userDailyProfit?props.userDailyProfit:\"-\"}\n        ></Card>\n     \n     \n      </Row>\n      <Row className=\"withdraw\">\n        <Row className=\"withdraw-bttn\">\n        <Button\n          className=\"withdraw__heading\"\n          onClick={() => {\n            props.withdraw();\n          }}\n        >\n          <h5><Trans>Withdraw Funds</Trans></h5>\n        </Button>\n        <Button\n          className=\"withdraw__heading\"\n          onClick={() => {\n            setTableHeading(\"Active Deposits\");\n            togglePopup();\n            setActiveDepositTableActive(true);\n            setTableStartColor(\"#f19539\");\n            setTableEndColor(\"#f3037e\");\n            setTableHeaderStartColor(\"#79dbfb\")\n            setTableHeaderEndColor(\"#2794e5\")\n          }}\n        >\n          <h5><Trans>View Active Deposits</Trans></h5>\n        </Button>\n        <Button\n          className=\"withdraw__heading\"\n          onClick={() => {\n            setTableHeading(\"Expired Deposits\");\n            setActiveDepositTableActive(false);\n            togglePopup();\n            setTableStartColor(\"#79dbfb\");\n            setTableEndColor(\"#2794e5\");\n            setTableHeaderStartColor(\"#f19539\")\n            setTableHeaderEndColor(\"#f3037e\")\n          }}\n        >\n          <h5><Trans>View Expired Deposits</Trans></h5>\n        </Button>\n\n\n\n        <Button\n          className=\"withdraw__heading_dark\"\n          onClick={() => {\n            var win = window.open(\"https://tronscan.org/#/contract/\"+utils.contractAddress, '_blank');\n          win.focus();  \n          }}\n        >\n          <h5><Trans>Check our Smart Contract</Trans></h5>\n        </Button>\n        </Row>\n        \n        {isOpen && (\n          <Popup\n            backGround=\"white\"\n            content={\n              <>\n                <span className=\"close-icon\" onClick={togglePopup}>\n                  x\n                </span>\n                <h1\n                  style={{\n                    background:\n                      \"linear-gradient(262deg,\"+\n                      tableStartColor +\n                      \" 8%,\"+\n                      tableEndColor +\n                      \" 98%)\"\n                  }}\n                  className=\"table-header\"\n                >\n                  {tableHeading}\n                </h1>\n                <Table hover responsive bordered striped>\n                  <thead style={{\n                    background:\n                      \"linear-gradient(262deg,\"+\n                      tableHeaderStartColor +\n                      \" 8%,\"+\n                      tableHeaderEndColor +\n                      \" 98%)\"\n                  }} className=\"table-header-data\">\n                    <tr>\n                      <th>Date</th>\n                      <th>Amount</th>\n                      <th>Withdrawal</th>\n                    </tr>\n                  </thead>\n                  <tbody>{renderDepositTableItem()}</tbody>\n                </Table>\n                <Row style={{ width: \"100%\" }} className=\"table-popup\">\n                  <Col lg={12} className=\"table-btn\">\n                    <Button\n                      className=\"withdraw__heading\"\n                      onClick={() => {\n                        togglePopup();\n                      }}\n                    >\n                      <h5>Close</h5>\n                    </Button>\n                  </Col>\n                </Row>\n              </>\n            }\n          />\n        )}\n\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading={<Trans>Active Deposits Sums</Trans>}\n            data={props.userTotalActiveDeposits}\n            icon={icon8}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Number of Total Deposits\"\n            data={props.noOfTotalDeposits}\n            icon={icon1}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n\n        <span></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Total Earned From Daily Profits\"\n            data={props.totalEarnedFromDailyProfit}\n            icon={icon1}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Earning Cap\"\n            data={\n              2 * props.userTotalDeposits - props.totalEarnedFromDailyProfit > 0\n                ? 2 * props.userTotalDeposits - props.totalEarnedFromDailyProfit\n                : 0\n            }\n            icon={icon8}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Total Refferal Commission Earned\"\n            data={props.totalReferralCommissionEarned}\n            icon={icon9}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Refferals Level Unlocked\"\n            data={props.referralLevelsUnlocked}\n            icon={icon7}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Total Team Deposits Volume in 10 levels\"\n            data={props.totalTeamDepositVolume}\n            icon={icon6}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Your Current Rank\"\n            icon={icon5}\n            data={getLevelRank()}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Binary Qualification\"\n            data={props.referralLevelsUnlocked >= 7 ? \"Yes\" : \"No\"}\n            icon={icon3}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Binary Commission Earned so far\"\n            data={props.binaryCommissionEarnedSoFar}\n            icon={icon2}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Direct Refferals\"\n            data={props.referrals}\n            icon={icon4}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Total Team Members\"\n            data={props.totalTeamMembers}\n            icon={icon10}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n      </Row>\n      <Row className=\"levels\">\n        <div className=\"level-icon\">\n          <img src={icon11} style={{ height: \"50px\" }}></img>\n        </div>\n\n        <Row className=\"widget-level-box\">\n          {renderLevelTree()}\n\n          {/* <Col lg={2} xs={3} className=\"box\">\n            Level 1\n          </Col>\n          \n          <Col lg={2} xs={3} className=\"box\">\n            Level 2\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 3\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 4\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 5\n          </Col>\n\n          <Col lg={2} xs={3} className=\"box\">\n            Level 6\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 7\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 8\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 9\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 10\n          </Col> */}\n        </Row>\n      </Row>\n\n      <ToastContainer />\n    </div>\n  );\n}\nexport default Main;\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Header/Header.js",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"import React, { Component, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport ReactFlagsSelect from \"react-flags-select\";\nimport \"./Header.scss\";\nimport { Container, Row, Col, Label, Input } from \"reactstrap\";\nimport logo from \"../../assets/logo.png\";\nimport { Icon } from \"semantic-ui-react\";\n// import \"react-flags-select/scss/react-flags-select.scss\";\nimport tron from \"../../assets/tron.jpeg\";\nimport india from \"../../assets/india.png\";\nimport { useTranslation } from \"react-i18next\";\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Dropdown,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n  FormGroup,\n} from \"reactstrap\";\n\nconst Header = (props) => {\n  const { t, i18n } = useTranslation();\n\n  const [isWalletConnected, setWalletConected] = useState(false);\n  const [walletAddress, setWalletAddress] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n  const [language, setLanguage] = useState(true);\n  const [isLanguageDropdownOpened,setLanguageDropdownOpened]= useState(false)\n  const [defaultLanguage, setDefaultLangauge] = useState({\n    name: \"English\",\n    code: \"en\",\n    flag: \"https://www.countryflags.io/gb/flat/64.png\",\n  });\n\n  const availableLanguages = [\n    {\n      name: \"English\",\n      code: \"en\",\n      flag: \"https://www.countryflags.io/gb/flat/64.png\",\n    },\n    {\n      name: \"Arabic\",\n      code: \"ar\",\n      flag: \"https://www.countryflags.io/sa/flat/64.png\",\n    },\n    {\n      name: \"Hindi\",\n      code: \"hi\",\n      flag: \"https://www.countryflags.io/in/flat/64.png\",\n    },\n    {\n      name: \"Chinese\",\n      code: \"zh\",\n      flag: \"https://www.countryflags.io/cn/flat/64.png\",\n    },\n    {\n      name: \"Spanish\",\n      code: \"spa\",\n      flag: \"https://www.countryflags.io/es/flat/64.png\",\n    },\n    {\n      name: \"Russian\",\n      code: \"ru\",\n      flag: \"https://www.countryflags.io/ru/flat/64.png\",\n    },\n    {\n      name: \"French\",\n      code: \"fr\",\n      flag: \"https://www.countryflags.io/fr/flat/64.png\",\n    },\n    {\n      name: \"Persian\",\n      code: \"fa\",\n      flag: \"https://www.countryflags.io/ir/flat/64.png\",\n    },\n    {\n      name: \"Vietnamese\",\n      code: \"vi\",\n      flag: \"https://www.countryflags.io/vn/flat/64.png\",\n    },\n  ];\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const toggleLanguage = () => {\n    setLanguage(!language);\n    console.log(\"language is \", language);\n  };\n\n  useEffect(() => {\n    var obj = setInterval(async () => {\n      if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\n        clearInterval(obj);\n\n        let rawAdd = window.tronWeb.defaultAddress.base58;\n        let address =\n          rawAdd.substring(0, 6) + \"...\" + rawAdd.substr(rawAdd.length - 6);\n        setWalletAddress(rawAdd);\n        setWalletConected(true);\n      }\n    }, 10);\n\n    let locale = localStorage.getItem(\"locale\");\n    if (locale) {\n      try {\n        locale = JSON.parse(locale);\n        console.log(\"locale\", locale);\n        setDefaultLangauge(locale);\n      } catch (errr) {}\n    }\n  }, []);\n\n  const languagePick = (language) => {\n    console.log(\"languagePick\", language);\n    i18n.changeLanguage(language.code);\n    localStorage.setItem(\"locale\", JSON.stringify(language));\n    setDefaultLangauge(language);\n    window.location.reload();\n  };\n  const renderLanguages = () => {\n    let languages = [];\n\n    // languages.push(<li><i className=\"sl-flag flag-de\"><div id=\"germany\"></div>\n    // </i> <span className=\"active\">Deutsch</span></li>)\n\n    // languages.push(<li><i className=\"sl-flag flag-usa\"><div id=\"english\"></div>\n    // </i> <span>English</span></li>)\n\n    for (let language of availableLanguages) {\n      languages.push(\n        <DropdownItem\n          onClick={() => {\n            languagePick(language);\n          }}\n        >\n          <>\n            {/* <i className={\"sl-flag flag-\"+language.code}>\n        <div id={language.name}></div>\n    </i>  */}\n\n            <img\n              src={language.flag}\n              style={{ height: 20, width: 20, borderRadius: \"50%\" }}\n            ></img>\n\n            <span>{language.name}</span>\n          </>\n        </DropdownItem>\n      );\n    }\n    return languages;\n  };\n  return (\n    <Navbar\n      dark\n      expand=\"md\"\n      fluid={true}\n      className=\"header\"\n      style={{ backgroundColor: \"\" + props.background }}\n    >\n      <NavbarBrand className=\"header__logo\" href=\"/\">\n        <img className=\"logo\" src={logo} alt=\"compony-logo\"></img>\n      </NavbarBrand>\n      <NavbarToggler onClick={toggle} className=\"mr-2\" />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"mr-auto\" navbar>\n          <Row className=\"header__containt-report\" noGutters>\n            <Col lg={3} className=\"header__containt-weeklyreport\" onClick={()=>{\n              \n              var win = window.open(\"/weeklyreports\", '');\n              win.focus();  \n            }}>\n              <Icon\n                name=\"calendar\"\n                style={{ color: \"#eb475b\" }}\n                size={20}\n              ></Icon>\n              <p>{t(\"Weekly Trading reports\")}</p>\n            </Col>\n            <Col\n              lg={6}\n              className=\"header__containt-dailyreport\"\n              style={{ marginRight: \"0px !important\" }}\n            >\n              <img src={tron} className=\"tron-logo\" style={{ height: 15 }} />\n              {isWalletConnected ? <p>{walletAddress}</p> : t(\"Connect Wallet\")}\n            </Col>\n\n            <Col\n              lg={2}\n              className=\"header__containt-languages\"\n              // style={{ marginRight: \"0px !important\" }}\n              // onClick={toggleLanguage()}\n            >\n              {/* <div className=\"sl-nav\">\n                <ul>\n                   \n                    <li>\n                      <img\n                        src={defaultLanguage.flag}\n                        style={{ height: 20, width: 20, borderRadius: \"50%\" }}\n                      ></img>\n                      <b style={{ marginLeft: 2 }}>{defaultLanguage.name}</b>{\" \"}\n                      <i className=\"fa fa-angle-down\"></i>\n                      <div className=\"triangle\"></div>\n                      <ul>{renderLanguages()}</ul>\n                    </li>\n                  \n                </ul>\n                \n              </div> */}\n\n\n<Dropdown isOpen={isLanguageDropdownOpened} toggle={()=>{\n\n  console.log(\"dssdsds\",isLanguageDropdownOpened)\nsetLanguageDropdownOpened(!isLanguageDropdownOpened)\n}}>\n     \n\n     <DropdownToggle style={{padding:0,background:\"none\",border:0,fontWeight:\"normal\"}}>\n     <img\n                        src={defaultLanguage.flag}\n                        style={{ height: 20, width: 20, borderRadius: \"50%\" }}\n                      ></img>\n                      <b style={{ marginLeft: 2 }}>{defaultLanguage.name}</b>{\" \"}\n        </DropdownToggle>\n\n\n     {/* <div onClick={()=>{\n       setLanguageDropdownOpened(true)\n     }}>\n     <img\n                        src={defaultLanguage.flag}\n                        style={{ height: 20, width: 20, borderRadius: \"50%\" }}\n                      ></img>\n                      <b style={{ marginLeft: 2 }}>{defaultLanguage.name}</b>{\" \"}\n     </div> */}\n      <DropdownMenu style={{marginTop:25}}>\n        {/* <DropdownItem header>Header</DropdownItem>\n        <DropdownItem>Some Action</DropdownItem>\n        <DropdownItem text>Dropdown Item Text</DropdownItem>\n        <DropdownItem disabled>Action (disabled)</DropdownItem>\n        <DropdownItem divider />\n        <DropdownItem>Foo Action</DropdownItem>\n        <DropdownItem>Bar Action</DropdownItem>\n        <DropdownItem>Quo Action</DropdownItem> */}\n\n        {renderLanguages()}\n      </DropdownMenu>\n    </Dropdown>\n          \n          \n            </Col>\n          </Row>\n        </Nav>\n      </Collapse>\n    </Navbar>\n  );\n};\nexport default Header;\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Body/Body.js",["166","167","168","169","170","171","172","173"],"import React, { Component } from \"react\";\nimport { useState } from \"react\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport \"./Body.scss\";\nimport { Icon } from \"semantic-ui-react\";\nimport Cards from \"./Cards/Cards\";\nimport Youtube from \"../Youtube/Youtube\";\nimport Bitcoin from \"../../assets/bitcoin.png\";\nimport bodyicon1 from \"../../assets/bodyicon1.png\";\nimport bodyicon2 from \"../../assets/bodyicon2.png\";\nimport bodyicon3 from \"../../assets/bodyicon3.png\";\nimport videohead from \"../../assets/videohead.png\";\nimport Popup from \"../Popup/Popup\";\nimport { useTranslation } from 'react-i18next';\nimport { Trans } from 'react-i18next';\nimport utils from \"../../utils\";\n\nfunction Body(props) {\n  // constructor(props) {\n  //   super(props);\n  //   this.state={\n  //     isOpen:false,\n  //   }\n  //   this.togglePopup=this.togglePopup.bind(this);\n  // }\n  //  togglePopup(){\n  //   this.state.isOpen=!this.state.isOpen;\n  //   console.log(this.state.isOpen);\n  // }\n\n  function openInNewTab(url) {\n    var win = window.open(url, '_blank');\n    win.focus();\n  }\n\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const { t, i18n } = useTranslation();\n\n\n  return (\n    <Container fluid={true} className=\"body-main\">\n      <Row className=\"body1\">\n        <Row style={{ width: \"100%\" }}>\n          <Col lg={6} className=\"body-main__content\">\n            <h1>{t(\"Multiply\")}</h1>\n            <h2>\n            <Trans >\n\n              Your <span>Tron</span> With US\n              </Trans>\n\n            </h2>\n            <Col lg={12} className=\"body-main__list\">\n              <Icon\n                name=\"check circle outline\"\n                style={{\n                  marginTop: \"7px\",\n                  marginLeft: \"5px\",\n                  color: \"#184fda\",\n                }}\n              ></Icon>\n              <p style={{marginLeft:\"2px\"}}><Trans>Earn 200% on your deposit</Trans></p>\n            </Col>\n            <Col lg={12} className=\"body-main__list\">\n              <Icon\n                name=\"check circle outline\"\n                style={{\n                  marginTop: \"7px\",\n                  marginLeft: \"5px\",\n                  color: \"#184fda\",\n                }}\n              ></Icon>\n              <p style={{marginLeft:\"2px\"}}><Trans>Get upto 1.40% Profit every day</Trans></p>\n            </Col>\n            <Col lg={12} className=\"body-main__list\">\n              <Icon\n                name=\"check circle outline\"\n                style={{\n                  marginTop: \"7px\",\n                  marginLeft: \"5px\",\n                  color: \"#184fda\",\n                }}\n              ></Icon>\n              <p style={{marginLeft:\"2px\"}}><Trans>Stable & Real Profits generated By Forex trading</Trans></p>\n            </Col>\n            <Col lg={12} className=\"body-main__list\">\n              <Icon\n                name=\"check circle outline\"\n                style={{\n                  marginTop: \"7px\",\n                  marginLeft: \"5px\",\n                  color: \"#184fda\",\n                }}\n              ></Icon>\n              <p style={{marginLeft:\"2px\"}}>\n                <Trans>No More Ponzi Contracts where most of the people end up losing their money</Trans>\n              </p>\n            </Col>\n            <Col lg={12} className=\"body-main__list\">\n              <Icon\n                name=\"check circle outline\"\n                style={{\n                  marginTop: \"7px\",\n                  marginLeft: \"5px\",\n                  color: \"#184fda\",\n                }}\n              ></Icon>\n              <p style={{marginLeft:\"2px\"}}><Trans>Weekly Trading Reports for 100% transparency</Trans></p>\n            </Col>\n            <Col lg={12} className=\"body-main__list\">\n              <Icon\n                name=\"check circle outline\"\n                style={{\n                  marginTop: \"7px\",\n                  marginLeft: \"5px\",\n                  color: \"#184fda\",\n                }}\n              ></Icon>\n              <p style={{marginLeft:\"2px\"}}>\n              <Trans>\n              Massive Binary Commissions for\n               Leaders & Team builders\n              </Trans>\n              </p>\n            </Col>\n            <Button\n              className=\"body-main__button\"\n              onClick={() => {\n                // var refferal = document.getElementById(\"refferal\").value;\n                // this.props.invest(refferal, 1000000000);\n                // togglePopup();\n                window.location.href = \"/stats\";\n\n              }}\n            >\n              <Trans>\n              Participate now\n              </Trans>\n            </Button>\n            {isOpen && (\n              <Popup backGround=\"#4b9afb\"\n                content={\n                  <>\n                    <h2>Wallet Statistics</h2>\n                    <Row className=\"popup-row\">\n                      <h3>Your Trx Wallet Address</h3>\n                      <Col lg={12} xs={12}>\n                        <input placeholder=\"adijflak45\"></input>\n                      </Col>\n                      <Col lg={12} xs={12} className=\"daily-profit\">\n                        <Col lg={6} className=\"profit-input\">\n                          <h3>Your Current daily profit</h3>\n                          <h4>0</h4>\n                        </Col>\n                        <Col lg={6} className=\"profit-data\">\n                          <h3>Basic Profit: 0%</h3>\n                          <h3>Hold Bonus: 0%</h3>\n                          <h3>Abstract Bonus: 0%</h3>\n                        </Col>\n                      </Col>\n                      <Col lg={12} xs={12} className=\"user-profit\">\n                        <Col lg={6} className=\"profit-input\">\n                          <h3>Available Withdraw balance</h3>\n                          <h4>0 TRX</h4>\n                        </Col>\n                        <Col lg={6} className=\"profit-data\">\n                          <h3>Request Withdraw</h3>\n                          <Button\n                            className=\"body-main__button\"\n                            onClick={() => {}}\n                          >\n                            Withdraw\n                          </Button>\n                        </Col>\n                      </Col>\n                    </Row>\n                    \n                  </>\n                }\n                handleClose={togglePopup}\n              />\n            )}\n          </Col>\n          <Col lg={6} className=\"body-main__bitcoin\">\n            {/* <img src={Bitcoin} alt=\"bitcoin\" style={{width:\"80%\"}}></img> */}\n          </Col>\n        </Row>\n      </Row>\n      <Row className=\"body-main__footer\">\n        <Row className=\"footer-body\">\n          <Col lg={4} xs={12} className=\"footer-content hoverable\" \n           onClick={()=>{\nopenInNewTab(\"https://tronscan.org/#/contract/\"+utils.contractAddress)\n          }}>\n            <img src={bodyicon1} style={{ marginRight: \"37px\" }}></img>\n            <p><Trans>Check Our Contract</Trans></p>\n          </Col>\n          <Col\n            lg={4}\n            xs={12}\n            className=\"footer-content hoverable\" \n            onClick={()=>{\n              openInNewTab(\"/planEN.pdf\")\n                        }}\n            className=\"footer-content\"\n            style={{\n              borderRight: \"2px solid #39475b\",\n              borderLeft: \"2px solid #39475b\",\n            }}\n          >\n            <img src={bodyicon2} style={{ marginRight: \"10px\" }}></img>\n            <p><Trans>Check Our Complete Plan</Trans></p>\n          </Col>\n          <Col lg={4} xs={12} \n            className=\"footer-content hoverable\" \n            onClick={()=>{\n              \n              var win = window.open(\"/weeklyreports\", '');\n              win.focus();  \n            }}>\n            <img src={bodyicon3} style={{ marginRight: \"10px\" }}></img>\n            <p><Trans>Check Our Weekly Reports</Trans></p>\n          </Col>\n        </Row>\n      </Row>\n\n      <Row className=\"body-main__cards\">\n        <Cards\n          card1Name={<Trans>Total Deposits</Trans>}\n          card2Name={<Trans>Total Members</Trans>}\n          card3Name={<Trans>Total Withdrawn</Trans>}\n          card4Name={<Trans>Amount in Trading Pool</Trans>}\n          card1Data={props.totalDepositAmount?props.totalDepositAmount:\"-\"}\n          card2Data={props.totalMembers?props.totalMembers:\"-\"}\n          card3Data={props.totalWithdraw?props.totalWithdraw:\"-\"}\n          card4Data={props.tradingPool?props.tradingPool:\"-\"}\n        ></Cards>\n      </Row>\n      <Row style={{ marginBottom: \"-5%\", marginTop: \"-7%\" }}>\n        <img\n          src={videohead}\n          style={{\n            width: \"100%\",\n          }}\n        ></img>\n      </Row>\n      <Row className=\"youtube-vid\">\n        <Youtube></Youtube>\n      </Row>\n    </Container>\n  );\n}\nexport default Body;\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Payment/Payment.js",["174"],"import React, { Component } from \"react\";\nimport { Container, Row, Button } from \"reactstrap\";\nimport \"./Payment.scss\";\nimport Widget from \"../widget/widget\";\nimport BinaryCommission from \"../widget/BinaryCommisionCalc/BinaryCommision\";\nimport level1 from \"../../assets/level1.png\";\nimport level2 from \"../../assets/level2.png\";\nimport level3 from \"../../assets/level3.png\";\nimport level4 from \"../../assets/level4.png\";\nimport level5 from \"../../assets/level5.png\";\nimport level6 from \"../../assets/level6.png\";\nimport level7 from \"../../assets/level7.png\";\nimport level8 from \"../../assets/level8.png\";\nimport level9 from \"../../assets/level9.png\";\nimport level_icon_1a from \"../../assets/level_icon_1a.png\";\nimport level_icon_1b from \"../../assets/level_icon_1b.png\";\nimport level_icon_2a from \"../../assets/level_icon_2a.png\";\nimport level_icon_2b from \"../../assets/level_icon_2b.png\";\nimport level_icon_3a from \"../../assets/level_icon_3a.png\";\nimport level_icon_3b from \"../../assets/level_icon_3b.png\";\nimport level_icon_4a from \"../../assets/level_icon_4a.png\";\nimport level_icon_4b from \"../../assets/level_icon_4b.png\";\nimport { Trans } from 'react-i18next';\n\nexport default class Payment extends Component {\n\n\n  render() {\n    return (\n      <Container fluid={true} className=\"payment\">\n        <Row className=\"payment-header\">\n          <h1><Trans>Payment Plan</Trans></h1>\n          <span style={{ border: \"1px solid orange\", width: \"5%\" }}></span>\n          <h5><Trans>EARN 1.20% DAILY PROFIT EVERDAY</Trans></h5>\n          <p className=\"personal-detail\">\n           <Trans>Personal Detail Bonus -For Every 100k of your own deposit you will earn 0.02% extra profit daily.Personal Detail Bonus is capped at 0.20%</Trans>\n          </p>\n\n\n\n          <p className=\"trading-detail\">\n           <span style={{\n             fontWeight:\"bold\"\n           }}><Trans>Trading Pool</Trans>- </span>\n           <Trans>70 of all the deposit directly goes to our trading pool from where the magic of generating profit starts. Every week profit made is deposited back to the smart contract.</Trans>\n          </p>\n\n\n          \n\n          <p className=\"example\">\n           <Trans>Example If you deposit 99k TRX you will earn 1.20% daily. If your deposit is 100k your daily profit will increase to 1.22% and it will increase 0.02% for every 100k in your deposit. Max daily profit will be 1.40%.</Trans>\n          </p>\n          <h3><Trans>Referral Commission</Trans></h3>\n        </Row>\n        <Row className=\"widget-row\">\n          <Widget\n            levelName=\"Starter\"\n            icon1={level_icon_1a}\n            icon2={level_icon_1b}\n            levelamount=\"100\"\n            level=\"3\"\n            levelNumber={[\"4%\", \"3%\", \"2%\"]}\n            requirement=\"TRX Deposit (You must deposit 100 TRX in order to earn from\n                    your referrals)\"\n            color=\"#0492ff\"\n            requirementText=\"Requirements-100 TRX Deposit (You must deposit 100 TRX in order to earn from your referrals)\"\n            bgStartColor=\"#92b0d6\"\n            bgEndColor=\"#0b61db\"\n            image={level1}\n          ></Widget>\n          <Widget\n            icon1={level_icon_4a}\n            icon2={level_icon_4b}\n            levelName=\"Bronze\"\n            level=\"4\"\n            requirementText=\"Requirements- 100k TRX Total Team Deposit Volume\"\n            levelNumber={[\"4%\", \"3%\", \"2%\", \"1%\"]}\n            levelamount=\"100k\"\n            requirement=\"TRX Total Team Deposit Volume\"\n            color=\"#ff3c5e\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n            image={level2}\n          ></Widget>\n          <Widget\n            icon1={level_icon_2a}\n            icon2={level_icon_2b}\n            level=\"5\"\n            requirementText=\"Requirements- 1 Million TRX Total Team Deposit Volume\"\n            levelNumber={[\"4%\", \"3%\", \"2%\", \"1%\", \"1%\"]}\n            levelamount=\" 1 Million \"\n            levelName=\"Platinum\"\n            requirement=\"TRX Total Team Deposit Volume \"\n            color=\"#ff9600\"\n            bgStartColor=\"#dc7107\"\n            bgEndColor=\"#f39d03\"\n            image={level3}\n          ></Widget>\n\n          <Widget\n            icon1={level_icon_3a}\n            icon2={level_icon_3b}\n            level=\"6\"\n            requirementText=\"Requirements- 5 Million TRX Total Team Deposit Volume\"\n            levelNumber={[\"4%\", \"3%\", \"2%\", \"1%\", \"1%\", \"1%\"]}\n            levelamount=\" 5 Million \"\n            levelName=\"Premium\"\n            requirement=\"TRX Total Team Deposit Volume \"\n            color=\"#51ce91\"\n            bgStartColor=\"#a9dc07\"\n            bgEndColor=\"#a3e09b \"\n            image={level4}\n          ></Widget>\n          <Widget\n            icon1={level_icon_1a}\n            icon2={level_icon_1b}\n            requirement=\"TRX Total Team Deposit Volume \"\n            binaryCommission=\"Binary Commission- \"\n            binaryCommissionIcon={level_icon_1b}\n            binaryCommissionPerc=\" 0.20% \"\n            requirementText=\"Requirements- 10 Million TRX Total Team Deposit Volume\"\n\n            binaryCommissionInfo=\"of your Team Deposit Volume Every Week\"\n            level=\"7\"\n            levelNumber={[\"4%\", \"3%\", \"2%\", \"1%\", \"1%\", \"1%\",\"0.5%\"]}\n            levelamount=\" 10 Million \"\n            levelName=\"Titanium\"\n            binaryCommissionText=\"Binary Commission- 0.20% of your Team Deposit Volume Every Week\"\n            color=\"#0492ff\"\n            bgStartColor=\"#92b0d6\"\n            bgEndColor=\"#0b61db\"\n            image={level5}\n          ></Widget>\n          {/* <Widget\n            requirementText=\"Requirements- 50 Million TRX Total Team Deposit Volume\"\n\n            icon1={level_icon_4a}\n            icon2={level_icon_4b}\n            requirement=\"TRX Total Team Deposit Volume \"\n            level=\"8\"\n            levelNumber={[\"4%\", \"3%\", \"2%\", \"1%\", \"1%\", \"1%\",\"0.5%\",\"0.5%\"]}\n            levelamount=\" 50 Million \"\n\n            levelName=\"Silver\"\n            color=\"#ff3c5e\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n            image={level6}\n            binaryCommission=\"Binary Commission- \"\n            binaryCommissionIcon={level_icon_4b}\n            binaryCommissionPerc=\" 0.40% \"\n            binaryCommissionInfo=\"of your Team Deposit Volume every Week\"\n          ></Widget>\n          */}\n          <Widget\n            icon1={level_icon_2a}\n            icon2={level_icon_2b}\n            level=\"8\"\n            requirementText=\"Requirements- 50 Million TRX Total Team Deposit Volume\"\n            binaryCommissionText=\"Binary Commission- 0.40% of your Team Deposit Volume Every Week\"\n            levelNumber={[\"4%\", \"3%\", \"2%\", \"1%\", \"1%\", \"1%\",\"0.5%\",\"0.5%\"]}\n            levelamount=\" 50 Million \"\n            levelName=\"Gold\"\n            requirement=\"TRX Total Team Deposit Volume \"\n            color=\"#ff9600\"\n            bgStartColor=\"#dc7107\"\n            bgEndColor=\"#f39d03\"\n            image={level7}\n            binaryCommission=\"Binary Commission- \"\n            binaryCommissionIcon={level_icon_2b}\n            binaryCommissionPerc=\" 0.60% \"\n            binaryCommissionInfo=\"of your Team Deposit Volume Every Week\"\n          ></Widget>\n\n          <Widget\n            icon1={level_icon_3a}\n            icon2={level_icon_3b}\n            level=\"9\"\n            requirementText=\"Requirements- 100 Million TRX Total Team Deposit Volume\"\n            binaryCommissionText=\"Binary Commission- 0.60% of your Team Deposit Volume Every Week\"\n            levelNumber={[\"4%\", \"3%\", \"2%\", \"1%\", \"1%\", \"1%\",\"0.5%\",\"0.5%\",\"0.5%\"]}\n            levelamount=\" 100 Million \"\n            levelName=\"Diamond\"\n            requirement=\"TRX Total Team Deposit Volume \"\n            color=\"#51ce91\"\n            bgStartColor=\"#a9dc07\"\n            bgEndColor=\"#a3e09b \"\n            image={level8}\n            binaryCommission=\"Binary Commission- \"\n            binaryCommissionIcon={level_icon_3b}\n            binaryCommissionPerc=\" 0.80% \"\n            binaryCommissionInfo=\"of your Team Deposit Volume Every Week\"\n          ></Widget>\n\n          <Widget\n            icon1={level_icon_4a}\n            icon2={level_icon_4b}\n            level=\"10\"\n            requirementText=\"Requirements- 500 Million TRX Total Team Deposit Volume\"\n            binaryCommissionText=\"Binary Commission- 1% of your Team Deposit Volume Every Week\"\n            levelNumber={[\"4%\", \"3%\", \"2%\", \"1%\", \"1%\", \"1%\",\"0.5%\",\"0.5%\",\"0.5%\",\"0.5%\"]}\n            levelamount=\" 500 Million \"\n            levelName=\"Super Gold\"\n            requirement=\"TRX Total Team Deposit Volume \"\n            color=\"#ff3c5e\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n            image={level9}\n            binaryCommission=\"Binary Commission- \"\n            binaryCommissionIcon={level_icon_4b}\n            binaryCommissionPerc=\"1% \"\n            binaryCommissionInfo=\"of your Team Deposit Volume Every Week\"\n          ></Widget>\n\n          <BinaryCommission></BinaryCommission>\n          <Row className=\"payment-button\">\n            <Button\n              onClick={() => {\n                // var refferal = document.getElementById(\"refferal\").value;\n                // this.props.invest(refferal, 1000000000);\n                // togglePopup();\n                window.location.href = \"/stats\";\n              }}\n              className=\"widget__button\"\n            >\n  <Trans>\n              Participate now\n              </Trans>            </Button>\n          </Row>\n        </Row>\n      </Container>\n    );\n  }\n}\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/Statistics/Withdraw/Withdraw.js",["175","176","177"],"import React, { Component } from 'react';\nimport { Container,Row,Col } from 'reactstrap';\nimport './Withdraw.scss';\nimport Icon1 from '../../assets/icon1.png'\nimport { Trans } from 'react-i18next';\n\nexport default class Withdraw extends Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return(\n            <Container fluid={true} className=\"withdraw-card\"\n             style={{background:\"linear-gradient(262deg,\"+\n            this.props.bgStartColor +\" 8%,\" \n            + this.props.bgEndColor+ \" 98%)\",height:\"100%\"}}>\n                <Row className=\"withdraw-card__main\">\n                    <Col lg={3} xs={12} style={{padding:\"0px !important\"}} className=\"card-head\">\n                        <div className=\"icon\"\n                        style={{background:\"linear-gradient(262deg,\"+\n                        this.props.bgStartColor +\" 8%,\" \n                        + this.props.bgEndColor+ \" 98%)\"}}\n                        >\n                          <img src={this.props.icon} style={{padding:\"8px\"}}></img>\n                        </div>\n                    </Col>\n                    <Col lg={9} xs={12} style={{padding:\"0px !important\",color:\"white\"}} className=\"card-body\">\n                         <h6 style={{fontWeight:\"600\"}}><Trans>{this.props.heading}</Trans></h6>\n                         <h2 style={{color:\"white\"}}>{this.props.data}</h2>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Popup/Popup.js",["178","179"],"import React from \"react\";\nimport { Container, Row } from \"reactstrap\";\nimport \"./Popup.scss\";\n\nconst Popup = (props) => {\n\n    \n    // const toggle=()=>{\n         \n    // }\n  return (\n    <div className=\"popup-box\">\n      <div className=\"box\" style={{backgroundColor:\"\"+props.backGround}}>\n        \n        {props.content}\n      </div>\n    </div>\n  );\n};\n\nexport default Popup;\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Body/Cards/Cards.js",[],"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Youtube/Youtube.js",["180","181","182","183","184"],"import React, { Component } from \"react\";\nimport {useState} from \"react\";\nimport { Container, Row,Col,Button } from \"reactstrap\";\nimport \"./Youtube.scss\";\nimport dot from \"../../assets/dot.png\";\nimport numberLogo from '../../assets/numberLogo.png';\nimport location from '../../assets/location.png'\nimport Popup from \"../Popup/Popup\"\nimport Pdf from '../../assets/certificate.pdf'\nfunction Youtube(props){\n  const [isOpen, setIsOpen] = useState(false);\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n  \n    return (\n      <Container className=\"youtube\">\n        <Row className=\"youtube__card\">\n          <iframe\n            src=\"https://www.youtube.com/embed/E7wJTI-1dvQ\"\n            frameborder=\"0\"\n            allow=\"autoplay; encrypted-media\"\n            allowfullscreen\n            title=\"video\"\n          />\n        </Row>\n        <Row className=\"compony-detail\">\n          <Row style={{width:\"93%\"}}>\n          <img src={dot}></img>\n\n          </Row>\n          <Row className=\"detail-header1\">\n          <Col lg={3} className=\"detail-header\">\n            \n            <p>Officially</p>\n            <h3 style={{textAlign:\"start\"}}>Registered Company</h3>\n          </Col>\n          <Col lg={4} className=\"detail\">\n             \n              <div className=\"detail-card\">\n              <img src={numberLogo} style={{height:\"40px\"}}></img>\n              <Row className=\"compony-number\">\n                  <h6>Company Name</h6>\n                  <p>Trontiply Limited</p>\n              </Row>\n              </div>\n\n          </Col>\n          \n          <span style={{marginLeft:\"10px\"}}></span>\n          <Col lg={4} className=\"detail\">\n        <div className=\"address-card\">\n              <img src={location} style={{height:\"40px\"}}></img>\n              <Row className=\"compony-number\">\n                  <h6>Company Number</h6>\n                  <p>13105007</p>\n              </Row>\n              </div>\n        </Col>\n            \n          </Row>\n         \n          <Row className=\"detail-footer\">\n            <Col lg={6}>\n            <a href={Pdf} without rel=\"noopener noreferrer\" target=\"_blank\">\n      <Button trailingIcon=\"picture_as_pdf\" label=\"Certificate\" className=\"certi-bttn\">\n        Check Our Certificate\n      </Button>\n      </a>\n            </Col>\n            <Col lg={4} className=\"bottom-dot\">\n              <img src={dot}></img>\n            </Col>\n          \n   \n          {isOpen && (\n              <Popup backGround=\"white\"\n                content={\n                  <>\n                  <span className=\"close-icon\" onClick={togglePopup}>\n                  x\n                </span>\n                    </>\n                }\n               \n              />\n            )}\n          </Row>\n        </Row>\n        \n      </Container>\n    );\n  }\n  export default Youtube;\n\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/widget/widget.js",["185","186","187","188","189","190","191"],"import React, { Component } from \"react\";\nimport { Button, Col, Container, Row } from \"reactstrap\";\nimport \"./widget.scss\";\nimport { Icon } from \"semantic-ui-react\";\nimport BinaryCommision from \"./BinaryCommisionCalc/BinaryCommision\";\nimport { Trans } from 'react-i18next';\n\nexport default class Widget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name,\n      trx: this.props.trx,\n      logo: this.props.logo,\n      // level: this.props.level,\n      binaryCommision: this.props.binaryCommision,\n    };\n  }\n\n  render() {\n    return (\n      <Container className=\"widget\">\n        <Row\n          className=\"widget-box\"\n          style={{ border: \"1px solid \" + this.props.color }}\n        >\n          <Col\n            lg={3}\n            className=\"widget-logo\"\n            style={{ borderRight: \"1px solid \" + this.props.color }}\n          >\n            <div\n              className=\"widget-logo-style\"\n              style={{\n                background:\n                  \"linear-gradient(262deg,\" +\n                  this.props.bgStartColor +\n                  \" 8%,\" +\n                  this.props.bgEndColor +\n                  \" 98%)\",\n              }}\n            >\n              <img src={this.props.image} style={{ height: \"75px\" }}></img>\n            </div>\n          </Col>\n          <Col lg={9} className=\"widget-details\">\n            <h3>\n              <span style={{ color: \"\" + this.props.color ,fontSize:32}}>\n                <Trans>{this.props.levelName}</Trans>{\" \"}\n              </span>\n            </h3>\n            <Row style={{width:\"100%\",marginBottom:\"8px\"}}>\n              <Col className=\"details-Requirements\" style={{padding: \"0px\" }}>\n                <img src={this.props.icon1} style={{ height: \"20px\" }}></img>\n                <p className=\"requirement\">\n                  {/* <span style={{fontWeight:\"600\"}}>\n                  Requirements :\n                  </span>\n                  <span\n                    style={{ color: \"\" + this.props.color, fontWeight: \"600\" }}\n                  >\n                    {this.props.levelamount}\n                  </span> */}\n                                  <Trans>\n\n                 {/* Requirements- {this.props.levelamount}  {this.props.requirement} */}\n\n                 {this.props.requirementText}\n                 </Trans>\n\n                </p>\n               \n              </Col>\n            </Row>\n\n            <Row style={{ width: \"100%\" }}>\n              <Col\n                className=\"details-Requirements\"\n                style={{padding: \"0px\" }}\n              >\n                <img src={this.props.icon2} style={{ height: \"20px\" }}></img>\n\n                <p style={{ fontWeight: \"600\" ,marginLeft:\"5px\"}}>\n                  <Trans>Commission upto {this.props.level} Levels</Trans>\n                </p>\n              </Col>\n            </Row>\n\n            <Row className=\"widgets-level-box\">\n              {\n          \n              [...Array(parseInt(this.props.levelNumber.length))].map(\n                (elementInArray, index) => (\n                  <Col\n                    lg={3}\n                    style={{ marginBottom: \"2%\", fontWeight: \"600\" }}\n                    key={index}\n                  >\n                    <p>\n                    {/* <Trans>\n\n                    </Trans> */}\n\n<Trans>Level</Trans> {index + 1} ={\" \"}\n                      <span\n                        style={{\n                          color: this.props.color,\n                          fontWeight: \"600\",\n                        }}\n                      >\n                        {this.props.levelNumber[index]}\n                      </span>\n\n                    </p>\n                  </Col>\n                )\n              )}\n            </Row>\n            <Row style={{ width: \"100%\" }}>\n              <Col\n                className=\"details-Requirements\"\n                style={{padding: \"0px\" }}\n              >\n                <img src={this.props.binaryCommisionIcon} style={{ height: \"20px\" }}></img>\n\n                <p style={{ fontWeight: \"600\",marginLeft:\"5px\" }}>\n                  <Trans>\n                    {/* {this.props.binaryCommision} <span\n                        style={{\n                          color: \"\" + this.props.color,\n                          fontWeight: \"600\",\n                        }}\n                      >\n                        {this.props.binaryCommisionPerc}\n                      </span> */}\n                      {this.props.binaryCommissionText}\n                  </Trans>\n                </p>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/widget/BinaryCommisionCalc/BinaryCommision.js",[],"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/WeeklyReport/WeeklyReport.js",["192","193","194","195","196","197"],"import React, { useEffect,useState } from 'react';\nimport './WeeklyReport.scss';\nimport Header from '../components/Header/Header';\nimport Main from './Main/Main';\nimport Promotional from './PromotionalBanner/Promotion';\nimport Footer from '../components/Footer/Footer';\nimport { Trans } from 'react-i18next';\nimport { Container ,Row,Col} from 'reactstrap';\nimport YouTube from 'react-youtube';\nimport moment from \"moment\";\nimport { FirebaseDatabaseProvider } from \"@react-firebase/database\";\nimport firebaseConfig from \"../firebaseConfig\"\nimport firebase from 'firebase';\n\nexport default function WeekyReport(){\n\tconst opts = {\n\t\theight: '50',\n\t\t// width: '640',\n\t\tplayerVars: {\n\t\t  // https://developers.google.com/youtube/player_parameters\n\t\t//   autoplay: 1,\n\t\t},\n\t  };\n\n\n\tconst [dataItems,setDataItems]= useState([])\n\tconst [firebaseDb,setFirebaseDb]= useState(null)\n\n\n\n\n\t// useEffect(() => {\n\t// \tlet items = []\n\t// \tif(data.length>0){\n\t// \t\tfor(let item of data){\n\t// \t\t\titems.push(renderReportItem(item))\n\t// \t\t}\n\t// \t\tsetDataItems(items)\n\t// \t}\n\t// },[data])\n\n\n\n\tuseEffect(()=>{\n\t\tlet db = firebaseDb\n\t\tif(!db){\n\t\t\tfirebase.initializeApp(firebaseConfig);\n\t\t\tdb = firebase.database();\n\t\t\tsetFirebaseDb(db)\n\t\t}\n\t\t\n\n\t\ttry {\n\t\t\tdb.ref(\"reports\").once('value', snapshot => {\n\t\t\t  let viewItems = []\n\t\t\t  snapshot.forEach((snap) => {\n\t\t\t\t//   console.log(\"vd\",snap.val().endWeek)\n\t\t\t\n\t\t\t\tlet data = snap.val()\n\t\t\t\tviewItems.push(renderReportItem({\n\t\t\t\t\tvideoId :data.videoId,\n\t\t\t\t\tdescription:data.description,\n\t\t\t\t\tstartWeek:new Date(data.startWeek),\n\t\t\t\t\tendWeek:new Date(data.endWeek)\n\t\t\t\t}))\n\n\t\t\t  });\n\n\n\t\t\t  \n\n\t\t\t  \n\t\t\t\tsetDataItems(viewItems)\n\t\t\t\n\t\t\t//   this.setState({ chats });\n\t\t\t});\n\n\n\n\t\t  } catch (error) {\n\n\t\t  }\n\t},[])\n\n\n\tconst renderReportItem = (data)=>{\n\n\t\t\n\t\treturn <Col lg={3} className=\"cardItem\">\n\t\t<YouTube videoId={data.videoId} opts={opts}  />\n\t\t<h2 style={{margin:0,fontWeight:\"bold\",fontSize:30}} \n\t\tclassName=\"cardHeading\">Report</h2>\n\n\t\t<h2 style={{margin:0,fontWeight:\"bold\",fontSize:18}} \n\t\tclassName=\"\">{moment(data.startWeek).format(\"DD/MMM/YYYY\")} To {moment(data.endWeek).format(\"DD/MMM/YYYY\")}</h2>\n\n\t\t<span style={{marginTop:25}}>{data.description}</span>\n\t\t</Col>\n\t}\n\n\n\treturn (\n\t\t<div>\n\n\n\t\t\t<div className=\"header-component\">\n\t\t\t\t<Header backgroundImage=\"#00000000\"/>\n\t\t\t\t<h1><Trans>Weekly Trading Reports</Trans></h1>\n\t\t\t</div>\n\n\t\t\t<Row style={{\n\t\t\n\t\t\ttop: 0,\n\t\t\tbottom: 0,\n\t\t}}>\n\n\t\t\t<div style={{marginLeft:25,marginRight:25,\n\t\t\twidth:\"100%\",\n\t\t\theight:\"100%\",\n\t\t\talignItems:\"center\",\n\t\t\t\tjustifyContent:\"center\",}}>\n\n\n\t\t\t<Row style={{alignItems:\"center\",justifyContent:\"center\"}}>\n\t\t\t{dataItems.length>0?dataItems:<div style={{fontSize:35,\n\t\t\n\t\t\t\tfontWeight:\"bold\",bottom:0}}></div>}\n\n\t\t\t</Row>\n\t\t\t</div>\n\t\t\t</Row>\n\n\t\t\t\t<div style={dataItems.length==0?{bottom:0,position:\"absolute\",width:\"100%\",}:{}}>\n\t\t\t\t<Footer />\n\t\t\t\t</div>\n\n\t\t</div>\n\t);\n}\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/WeeklyReport/Main/Main.js",["198","199","200","201","202","203","204","205","206","207","208","209","210","211","212"],"import React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Container, Row, Col, Label, Input, Button, Table } from \"reactstrap\";\nimport \"./Main.scss\";\nimport { Icon } from \"semantic-ui-react\";\nimport Withdraw from \"../Withdraw/Withdraw\";\nimport icon1 from \"../../assets/icon1.png\";\nimport icon2 from \"../../assets/icon2.png\";\nimport icon3 from \"../../assets/icon3.png\";\nimport icon4 from \"../../assets/icon4.png\";\nimport icon5 from \"../../assets/icon5.png\";\nimport icon6 from \"../../assets/icon6.png\";\nimport icon7 from \"../../assets/icon7.png\";\nimport icon8 from \"../../assets/icon8.png\";\nimport icon9 from \"../../assets/icon9.png\";\nimport icon10 from \"../../assets/icon10.png\";\nimport icon11 from \"../../assets/icon11.png\";\nimport deposit from \"../../assets/deposit.png\";\nimport QRCode from \"qrcode.react\";\nimport reff_icon from \"../../assets/reff-icon.png\";\n// import money_transfer from \"../../assets/money-transfer.png\";\nimport money_transfer from \"../../assets/network.png\";\nimport { Trans } from 'react-i18next';\nimport utils from \"../../utils\"\nimport Popup from \"../../components/Popup/Popup\";\n\nimport Card from \"../../components/Body/Cards/Cards\";\nimport moment from \"moment\";\nimport reff_bg from \"../../assets/reff-bg.png\";\n\nconst levelColors = [\n  \"#0492ff\",\n  \"#ff3956\",\n  \"#ff9600\",\n  \"#51ce91\",\n  \"#0492ff\",\n  \"#ff3c5e\",\n  \"#ff9600\",\n  \"#51ce91\",\n  \"#ff3c5e\",\n];\nfunction Main(props) {\n  const [activeDeposits, setActiveDeposits] = useState([]);\n\n  const [expiredDeposits, setExpiredDeposits] = useState([]);\n  const [tableData, setTableData] = useState(false);\n  const [walletAddress, setWalletAddress] = useState(false);\n\n  const getReadableTime = (time) => {\n    return moment(time * 1000).format(\"DD/MMM/YYYY\");\n  };\n\n  useEffect(() => {\n    setActiveDeposits(props.activeDeposits);\n  }, [props.activeDeposits]);\n\n  useEffect(() => {\n    setLevelTree(props.levelTree);\n  }, [props.levelTree]);\n\n  useEffect(() => {\n    setWalletAddress(props.account);\n    setRefLink(getMyRefLink(props.account));\n    console.log(\"pros.accout\", props.account);\n  }, [props.account]);\n\n  useEffect(() => {\n    setExpiredDeposits(props.expiredDeposits);\n  }, [props.expiredDeposits]);\n  const [levelTree, setLevelTree] = useState([]);\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [depositAmount, setDepositAmount] = useState(0);\n  const [tableHeading, setTableHeading] = useState(\"Active Deposit\");\n  const [isActiveDepositTableActive, setActiveDepositTableActive] = useState(\n    false\n  );\n  const [copySuccess, setCopySuccess] = useState(\"\");\n  const [refLink, setRefLink] = useState();\n  const [tableStartColor, setTableStartColor] = useState(\"\");\n  const [tableEndColor, setTableEndColor] = useState(\"\");\n  const [tableHeaderStartColor, setTableHeaderStartColor] = useState(\"\");\n  const [tableHeaderEndColor, setTableHeaderEndColor] = useState(\"\");\n  const textAreaRef = useRef(null);\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const renderLevelTree = () => {\n    let tree = [];\n\n    for (let level of levelTree) {\n      tree.push(\n        // <Col lg={2} xs={3} className=\"box\">\n        //   Level {level.levelNumber} | Members {level.members}\n        // </Col>\n\n        <Col lg={3} style={{ marginBottom: \"2%\", fontWeight: \"600\" }}>\n          <p>\n            Level {level.levelNumber} =\n            <span\n              style={{\n                color: levelColors[level.levelNumber - 1],\n                fontWeight: \"600\",\n              }}\n            >\n              {\" \"}\n              Members {level.members}\n            </span>\n          </p>\n        </Col>\n      );\n      // console.log(\"level\");\n    }\n    // console.log(\"hello\");\n    <h1>hello i am level</h1>;\n    return tree;\n  };\n\n  const getLevelRank = () => {\n    let number = props.referralLevelsUnlocked;\n    //TODO 1\n    if (number <= 3) {\n      return \"Starter\";\n    } else if (number <= 4) {\n      return \"Bronze\";\n    } else if (number <= 5) {\n      return \"Platinum\";\n    } else if (number <= 6) {\n      return \"Premium\";\n    } else if (number <= 7) {\n      return \"Titanium\";\n    } else if (number <= 8) {\n      return \"Gold\";\n    } else if (number <= 9) {\n      return \"Diamond\";\n    } else if (number <= 10) {\n      return \"Super Gold\";\n    }\n  };\n  function copyToClipboard(e) {\n    var textField = document.createElement(\"textarea\");\n    textField.innerText = refLink;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand(\"copy\");\n    textField.remove();\n\n    setCopySuccess(\"Copied!\");\n  }\n\n  const renderDepositTableItem = () => {\n    let items = [];\n\n    let data = [];\n\n    if (isActiveDepositTableActive) {\n      data = [...activeDeposits];\n    } else {\n      data = [...expiredDeposits];\n    }\n\n    for (let item of data) {\n      items.push(\n        <tr>\n          <td style={{color:\"#000\"}}>{getReadableTime(item.date)}</td>\n          <td style={{color:\"#000\"}}>{item.amount}</td>\n\n          <td style={{color:\"#000\"}}>{item.withdrawn}</td>\n        </tr>\n      );\n    }\n\n    if (items.length == 0) {\n      // setTableData(true)\n      console.log(tableData);\n      return <h3>No data</h3>;\n    } else {\n      return items;\n    }\n  };\n\n  const getMyRefLink = (addr) => {\n    return \"https://trontiply.com/?ref=\" + addr;\n  };\n\n  const getIfHideTable = () => {\n    if (isActiveDepositTableActive) {\n      if (activeDeposits.length == 0) {\n        return true;\n      }\n    } else {\n      if (expiredDeposits.length == 0) {\n        return true;\n      }\n    }\n  };\n  const makeDeposit = () => {\n    // let depositAmount = depositAmount;\n\n    //todo 1000 krna h\n    if (depositAmount < 100) {\n      //Show error\n\n    } else {\n      makeDepositTransaction(depositAmount);\n    }\n  };\n\n  const makeDepositTransaction = (amount) => {\n    console.log(\"propos12\", amount);\n    props.invest(amount);\n  };\n\n  return (\n    <div className=\"main\">\n      <Row className=\"main__resultcard\">\n\n        <Row className=\"total-result1\">\n\n\n          \n          <Col lg={2} sm={2} md={2} className=\"card1\">\n            {refLink ? <QRCode value={refLink} /> : null}\n          </Col>\n          <Col lg={10}  sm={10}  md={10}className=\"card2\">\n            <Row className=\"ref-main\">\n              <Col lg={2} xs={4} >\n               <div className=\"refferal-logo\">\n               <img  \n                  src={reff_icon}\n                  style={{\n                    height: \"55px\",\n                    width: \"55px\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    display: \"block\",\n                  }}\n                ></img>\n               </div>\n              </Col>\n\n              <Col lg={10} className=\"input-col\">\n                {/* <img src={reff_bg}></img> */}\n                <Label for=\"amount\"></Label>\n                <Row>\n                  <Col lg={12} style={{ display: \"flex\" }}>\n                    <Input\n                      onChange={(t) => {\n                        // setDepositAmount(t.target.value);\n                      }}\n                      type=\"text\"\n                      name=\"amount\"\n                      id=\"amount\"\n                      value={refLink}\n                      className=\"ref-input\"\n                      placeholder=\"Enter Amount\"\n                    />\n                    <Button className=\"ref-copy\" onClick={copyToClipboard}>\n                      <h5><Trans>Copy</Trans></h5>\n                    </Button>\n                  </Col>\n                </Row>\n\n                {/* <h3>Refferral Link</h3>\n                <div className=\"volume\"> */}\n                {/* <textarea\n                  id=\"link\"\n                  style={{ margin: \"0px\", color: \"white\", fontWeight: \"600\",width:\"100%\" }}\n                  ref={textAreaRef}\n                  onClick={copyToClipboard}\n                  value={refLink}\n                > */}\n\n                {/* <h4\n                    onClick={() => {\n                      copyToClipboard();\n                    }}\n                    id=\"link\"\n                  >\n                    {refLink}\n                  </h4> */}\n\n                {/* </textarea> */}\n                {/* </div> */}\n                {/* <div className=\"volume2\">\n                 \n                </div> */}\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Row>\n     \n      <Row className=\"main__deposit\">\n        <div className=\"deposit-icon\">\n          <img src={deposit}></img>\n        </div>\n\n        <h6><Trans>Make A Deposit</Trans></h6>\n        <Label for=\"amount\"></Label>\n        <Input\n          onChange={(t) => {\n            setDepositAmount(t.target.value);\n          }}\n          type=\"text\"\n          name=\"amount\"\n          id=\"amount\"\n          value={depositAmount}\n          className=\"input-box\"\n          placeholder=\"Enter Amount\"\n        />\n        <Button\n          className=\"deposit__button\"\n          onClick={() => {\n            // props.invest(document.getElementById(\"amount\").value);\n            makeDeposit();\n          }}\n        >\n          <Trans>Confirm Deposit</Trans>\n        </Button>\n      </Row>\n     \n     \n\n\n      \n     \n     \n     \n     \n      <Row className=\"cards\">\n\n  \n        \n     <Card\n          card1Name=\"Your Daily Profit\"\n          card2Name=\"Basic Profit\"\n          card3Name=\"Personal Deposit Bonus\"\n          card4Name=\"Available Account Balance\"\n          card1Data={\n            props.userPersonalDepositProfit?\n            (1.2 + parseFloat(props.userPersonalDepositProfit)).toFixed(2) +\n            \" %\":\"-\"\n          }\n          card2Data=\"1.20%\"\n          card3Data={props.userPersonalDepositProfit?props.userPersonalDepositProfit:\"-\"}\n          card4Data={props.userDailyProfit?props.userDailyProfit:\"-\"}\n        ></Card>\n     \n     \n      </Row>\n      <Row className=\"withdraw\">\n        <Row className=\"withdraw-bttn\">\n        <Button\n          className=\"withdraw__heading\"\n          onClick={() => {\n            props.withdraw();\n          }}\n        >\n          <h5><Trans>Withdraw Funds</Trans></h5>\n        </Button>\n        <Button\n          className=\"withdraw__heading\"\n          onClick={() => {\n            setTableHeading(\"Active Deposits\");\n            togglePopup();\n            setActiveDepositTableActive(true);\n            setTableStartColor(\"#f19539\");\n            setTableEndColor(\"#f3037e\");\n            setTableHeaderStartColor(\"#79dbfb\")\n            setTableHeaderEndColor(\"#2794e5\")\n          }}\n        >\n          <h5><Trans>View Active Deposits</Trans></h5>\n        </Button>\n        <Button\n          className=\"withdraw__heading\"\n          onClick={() => {\n            setTableHeading(\"Expired Deposits\");\n            setActiveDepositTableActive(false);\n            togglePopup();\n            setTableStartColor(\"#79dbfb\");\n            setTableEndColor(\"#2794e5\");\n            setTableHeaderStartColor(\"#f19539\")\n            setTableHeaderEndColor(\"#f3037e\")\n          }}\n        >\n          <h5><Trans>View Expired Deposits</Trans></h5>\n        </Button>\n\n\n\n        <Button\n          className=\"withdraw__heading_dark\"\n          onClick={() => {\n            var win = window.open(\"https://tronscan.org/#/contract/\"+utils.contractAddress, '_blank');\n          win.focus();  \n          }}\n        >\n          <h5><Trans>Check our Smart Contract</Trans></h5>\n        </Button>\n        </Row>\n        \n        {isOpen && (\n          <Popup\n            backGround=\"white\"\n            content={\n              <>\n                <span className=\"close-icon\" onClick={togglePopup}>\n                  x\n                </span>\n                <h1\n                  style={{\n                    background:\n                      \"linear-gradient(262deg,\"+\n                      tableStartColor +\n                      \" 8%,\"+\n                      tableEndColor +\n                      \" 98%)\"\n                  }}\n                  className=\"table-header\"\n                >\n                  {tableHeading}\n                </h1>\n                <Table hover responsive bordered striped>\n                  <thead style={{\n                    background:\n                      \"linear-gradient(262deg,\"+\n                      tableHeaderStartColor +\n                      \" 8%,\"+\n                      tableHeaderEndColor +\n                      \" 98%)\"\n                  }} className=\"table-header-data\">\n                    <tr>\n                      <th>Date</th>\n                      <th>Amount</th>\n                      <th>Withdrawal</th>\n                    </tr>\n                  </thead>\n                  <tbody>{renderDepositTableItem()}</tbody>\n                </Table>\n                <Row style={{ width: \"100%\" }} className=\"table-popup\">\n                  <Col lg={12} className=\"table-btn\">\n                    <Button\n                      className=\"withdraw__heading\"\n                      onClick={() => {\n                        togglePopup();\n                      }}\n                    >\n                      <h5>Close</h5>\n                    </Button>\n                  </Col>\n                </Row>\n              </>\n            }\n          />\n        )}\n\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading={<Trans>Active Deposits Sums</Trans>}\n            data={props.userTotalActiveDeposits}\n            icon={icon8}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Number of Total Deposits\"\n            data={props.noOfTotalDeposits}\n            icon={icon1}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n\n        <span></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Total Earned From Daily Profits\"\n            data={props.totalEarnedFromDailyProfit}\n            icon={icon1}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Earning Cap\"\n            data={\n              2 * props.userTotalDeposits - props.totalEarnedFromDailyProfit > 0\n                ? 2 * props.userTotalDeposits - props.totalEarnedFromDailyProfit\n                : 0\n            }\n            icon={icon8}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Total Refferal Commission Earned\"\n            data={props.totalReferralCommissionEarned}\n            icon={icon9}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Refferals Level Unlocked\"\n            data={props.referralLevelsUnlocked}\n            icon={icon7}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Total Team Deposits Volume in 10 levels\"\n            data={props.totalTeamDepositVolume}\n            icon={icon6}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Your Current Rank\"\n            icon={icon5}\n            data={getLevelRank()}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Binary Qualification\"\n            data={props.referralLevelsUnlocked >= 7 ? \"Yes\" : \"No\"}\n            icon={icon3}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Binary Commission Earned so far\"\n            data={props.binaryCommissionEarnedSoFar}\n            icon={icon2}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Direct Refferals\"\n            data={props.referrals}\n            icon={icon4}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Total Team Members\"\n            data={props.totalTeamMembers}\n            icon={icon10}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n      </Row>\n      <Row className=\"levels\">\n        <div className=\"level-icon\">\n          <img src={icon11} style={{ height: \"50px\" }}></img>\n        </div>\n\n        <Row className=\"widget-level-box\">\n          {renderLevelTree()}\n\n          {/* <Col lg={2} xs={3} className=\"box\">\n            Level 1\n          </Col>\n          \n          <Col lg={2} xs={3} className=\"box\">\n            Level 2\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 3\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 4\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 5\n          </Col>\n\n          <Col lg={2} xs={3} className=\"box\">\n            Level 6\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 7\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 8\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 9\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 10\n          </Col> */}\n        </Row>\n      </Row>\n\n    </div>\n  );\n}\nexport default Main;\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/WeeklyReport/PromotionalBanner/Promotion.js",["213","214","215","216"],"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/WeeklyReport/Withdraw/Withdraw.js",["217","218","219"],"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/firebaseConfig.js",[],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":8,"column":50,"nodeType":"226","messageId":"227","endLine":8,"endColumn":54},{"ruleId":"224","severity":1,"message":"228","line":80,"column":9,"nodeType":"226","messageId":"227","endLine":80,"endColumn":17},{"ruleId":"229","severity":1,"message":"230","line":425,"column":17,"nodeType":"231","messageId":"232","endLine":425,"endColumn":19},{"ruleId":"233","severity":1,"message":"234","line":8,"column":2,"nodeType":"235","messageId":"236","endLine":10,"endColumn":3},{"ruleId":"233","severity":1,"message":"234","line":10,"column":2,"nodeType":"235","messageId":"236","endLine":12,"endColumn":3},{"ruleId":"224","severity":1,"message":"237","line":3,"column":8,"nodeType":"226","messageId":"227","endLine":3,"endColumn":14},{"ruleId":"224","severity":1,"message":"238","line":5,"column":10,"nodeType":"226","messageId":"227","endLine":5,"endColumn":13},{"ruleId":"224","severity":1,"message":"239","line":5,"column":15,"nodeType":"226","messageId":"227","endLine":5,"endColumn":18},{"ruleId":"233","severity":1,"message":"234","line":10,"column":2,"nodeType":"235","messageId":"236","endLine":12,"endColumn":3},{"ruleId":"240","severity":1,"message":"241","line":16,"column":25,"nodeType":"242","endLine":16,"endColumn":40},{"ruleId":"224","severity":1,"message":"243","line":4,"column":8,"nodeType":"226","messageId":"227","endLine":4,"endColumn":15},{"ruleId":"244","severity":1,"message":"245","line":80,"column":9,"nodeType":"246","endLine":83,"endColumn":10},{"ruleId":"244","severity":1,"message":"245","line":99,"column":9,"nodeType":"246","endLine":103,"endColumn":14},{"ruleId":"244","severity":1,"message":"245","line":122,"column":9,"nodeType":"246","endLine":122,"endColumn":67},{"ruleId":"224","severity":1,"message":"247","line":3,"column":10,"nodeType":"226","messageId":"227","endLine":3,"endColumn":19},{"ruleId":"224","severity":1,"message":"248","line":5,"column":10,"nodeType":"226","messageId":"227","endLine":5,"endColumn":14},{"ruleId":"224","severity":1,"message":"249","line":22,"column":8,"nodeType":"226","messageId":"227","endLine":22,"endColumn":22},{"ruleId":"224","severity":1,"message":"250","line":30,"column":8,"nodeType":"226","messageId":"227","endLine":30,"endColumn":15},{"ruleId":"224","severity":1,"message":"251","line":47,"column":21,"nodeType":"226","messageId":"227","endLine":47,"endColumn":33},{"ruleId":"224","severity":1,"message":"252","line":48,"column":10,"nodeType":"226","messageId":"227","endLine":48,"endColumn":23},{"ruleId":"224","severity":1,"message":"253","line":79,"column":10,"nodeType":"226","messageId":"227","endLine":79,"endColumn":21},{"ruleId":"224","severity":1,"message":"254","line":85,"column":9,"nodeType":"226","messageId":"227","endLine":85,"endColumn":20},{"ruleId":"229","severity":1,"message":"230","line":177,"column":22,"nodeType":"231","messageId":"232","endLine":177,"endColumn":24},{"ruleId":"224","severity":1,"message":"255","line":190,"column":9,"nodeType":"226","messageId":"227","endLine":190,"endColumn":23},{"ruleId":"229","severity":1,"message":"230","line":192,"column":33,"nodeType":"231","messageId":"232","endLine":192,"endColumn":35},{"ruleId":"229","severity":1,"message":"230","line":196,"column":34,"nodeType":"231","messageId":"232","endLine":196,"endColumn":36},{"ruleId":"244","severity":1,"message":"245","line":234,"column":16,"nodeType":"246","endLine":243,"endColumn":18},{"ruleId":"244","severity":1,"message":"245","line":301,"column":11,"nodeType":"246","endLine":301,"endColumn":30},{"ruleId":"244","severity":1,"message":"245","line":663,"column":11,"nodeType":"246","endLine":663,"endColumn":56},{"ruleId":"224","severity":1,"message":"256","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":26},{"ruleId":"224","severity":1,"message":"257","line":3,"column":8,"nodeType":"226","messageId":"227","endLine":3,"endColumn":24},{"ruleId":"224","severity":1,"message":"247","line":5,"column":10,"nodeType":"226","messageId":"227","endLine":5,"endColumn":19},{"ruleId":"224","severity":1,"message":"258","line":5,"column":31,"nodeType":"226","messageId":"227","endLine":5,"endColumn":36},{"ruleId":"224","severity":1,"message":"259","line":5,"column":38,"nodeType":"226","messageId":"227","endLine":5,"endColumn":43},{"ruleId":"224","severity":1,"message":"260","line":10,"column":8,"nodeType":"226","messageId":"227","endLine":10,"endColumn":13},{"ruleId":"224","severity":1,"message":"261","line":20,"column":3,"nodeType":"226","messageId":"227","endLine":20,"endColumn":10},{"ruleId":"224","severity":1,"message":"262","line":21,"column":3,"nodeType":"226","messageId":"227","endLine":21,"endColumn":10},{"ruleId":"224","severity":1,"message":"263","line":22,"column":3,"nodeType":"226","messageId":"227","endLine":22,"endColumn":23},{"ruleId":"224","severity":1,"message":"264","line":26,"column":3,"nodeType":"226","messageId":"227","endLine":26,"endColumn":13},{"ruleId":"224","severity":1,"message":"265","line":27,"column":3,"nodeType":"226","messageId":"227","endLine":27,"endColumn":12},{"ruleId":"224","severity":1,"message":"266","line":94,"column":9,"nodeType":"226","messageId":"227","endLine":94,"endColumn":23},{"ruleId":"224","severity":1,"message":"267","line":105,"column":13,"nodeType":"226","messageId":"227","endLine":105,"endColumn":20},{"ruleId":"244","severity":1,"message":"245","line":150,"column":13,"nodeType":"246","endLine":153,"endColumn":14},{"ruleId":"244","severity":1,"message":"245","line":194,"column":15,"nodeType":"246","endLine":194,"endColumn":78},{"ruleId":"244","severity":1,"message":"245","line":231,"column":6,"nodeType":"246","endLine":234,"endColumn":24},{"ruleId":"224","severity":1,"message":"256","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":26},{"ruleId":"224","severity":1,"message":"268","line":8,"column":8,"nodeType":"226","messageId":"227","endLine":8,"endColumn":15},{"ruleId":"224","severity":1,"message":"269","line":43,"column":14,"nodeType":"226","messageId":"227","endLine":43,"endColumn":18},{"ruleId":"244","severity":1,"message":"245","line":201,"column":13,"nodeType":"246","endLine":201,"endColumn":66},{"ruleId":"270","severity":1,"message":"271","line":211,"column":13,"nodeType":"242","endLine":211,"endColumn":39},{"ruleId":"244","severity":1,"message":"245","line":217,"column":13,"nodeType":"246","endLine":217,"endColumn":66},{"ruleId":"244","severity":1,"message":"245","line":227,"column":13,"nodeType":"246","endLine":227,"endColumn":66},{"ruleId":"244","severity":1,"message":"245","line":246,"column":9,"nodeType":"246","endLine":251,"endColumn":10},{"ruleId":"224","severity":1,"message":"272","line":11,"column":8,"nodeType":"226","messageId":"227","endLine":11,"endColumn":14},{"ruleId":"224","severity":1,"message":"273","line":4,"column":8,"nodeType":"226","messageId":"227","endLine":4,"endColumn":13},{"ruleId":"233","severity":1,"message":"234","line":8,"column":5,"nodeType":"235","messageId":"236","endLine":10,"endColumn":6},{"ruleId":"244","severity":1,"message":"245","line":24,"column":27,"nodeType":"246","endLine":24,"endColumn":78},{"ruleId":"224","severity":1,"message":"247","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":19},{"ruleId":"224","severity":1,"message":"238","line":2,"column":21,"nodeType":"226","messageId":"227","endLine":2,"endColumn":24},{"ruleId":"224","severity":1,"message":"256","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":26},{"ruleId":"244","severity":1,"message":"245","line":30,"column":11,"nodeType":"246","endLine":30,"endColumn":26},{"ruleId":"244","severity":1,"message":"245","line":42,"column":15,"nodeType":"246","endLine":42,"endColumn":61},{"ruleId":"244","severity":1,"message":"245","line":54,"column":15,"nodeType":"246","endLine":54,"endColumn":59},{"ruleId":"244","severity":1,"message":"245","line":73,"column":15,"nodeType":"246","endLine":73,"endColumn":30},{"ruleId":"224","severity":1,"message":"274","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":16},{"ruleId":"224","severity":1,"message":"248","line":4,"column":10,"nodeType":"226","messageId":"227","endLine":4,"endColumn":14},{"ruleId":"224","severity":1,"message":"275","line":5,"column":8,"nodeType":"226","messageId":"227","endLine":5,"endColumn":23},{"ruleId":"244","severity":1,"message":"245","line":43,"column":15,"nodeType":"246","endLine":43,"endColumn":70},{"ruleId":"244","severity":1,"message":"245","line":54,"column":17,"nodeType":"246","endLine":54,"endColumn":72},{"ruleId":"244","severity":1,"message":"245","line":81,"column":17,"nodeType":"246","endLine":81,"endColumn":72},{"ruleId":"244","severity":1,"message":"245","line":124,"column":17,"nodeType":"246","endLine":124,"endColumn":86},{"ruleId":"224","severity":1,"message":"276","line":4,"column":8,"nodeType":"226","messageId":"227","endLine":4,"endColumn":12},{"ruleId":"224","severity":1,"message":"277","line":5,"column":8,"nodeType":"226","messageId":"227","endLine":5,"endColumn":19},{"ruleId":"224","severity":1,"message":"247","line":8,"column":10,"nodeType":"226","messageId":"227","endLine":8,"endColumn":19},{"ruleId":"224","severity":1,"message":"278","line":11,"column":10,"nodeType":"226","messageId":"227","endLine":11,"endColumn":34},{"ruleId":"279","severity":1,"message":"280","line":83,"column":4,"nodeType":"281","endLine":83,"endColumn":6,"suggestions":"282"},{"ruleId":"229","severity":1,"message":"230","line":133,"column":33,"nodeType":"231","messageId":"232","endLine":133,"endColumn":35},{"ruleId":"224","severity":1,"message":"247","line":3,"column":10,"nodeType":"226","messageId":"227","endLine":3,"endColumn":19},{"ruleId":"224","severity":1,"message":"248","line":5,"column":10,"nodeType":"226","messageId":"227","endLine":5,"endColumn":14},{"ruleId":"224","severity":1,"message":"249","line":22,"column":8,"nodeType":"226","messageId":"227","endLine":22,"endColumn":22},{"ruleId":"224","severity":1,"message":"250","line":29,"column":8,"nodeType":"226","messageId":"227","endLine":29,"endColumn":15},{"ruleId":"224","severity":1,"message":"251","line":46,"column":21,"nodeType":"226","messageId":"227","endLine":46,"endColumn":33},{"ruleId":"224","severity":1,"message":"252","line":47,"column":10,"nodeType":"226","messageId":"227","endLine":47,"endColumn":23},{"ruleId":"224","severity":1,"message":"253","line":78,"column":10,"nodeType":"226","messageId":"227","endLine":78,"endColumn":21},{"ruleId":"224","severity":1,"message":"254","line":84,"column":9,"nodeType":"226","messageId":"227","endLine":84,"endColumn":20},{"ruleId":"229","severity":1,"message":"230","line":175,"column":22,"nodeType":"231","messageId":"232","endLine":175,"endColumn":24},{"ruleId":"224","severity":1,"message":"255","line":188,"column":9,"nodeType":"226","messageId":"227","endLine":188,"endColumn":23},{"ruleId":"229","severity":1,"message":"230","line":190,"column":33,"nodeType":"231","messageId":"232","endLine":190,"endColumn":35},{"ruleId":"229","severity":1,"message":"230","line":194,"column":34,"nodeType":"231","messageId":"232","endLine":194,"endColumn":36},{"ruleId":"244","severity":1,"message":"245","line":231,"column":16,"nodeType":"246","endLine":240,"endColumn":18},{"ruleId":"244","severity":1,"message":"245","line":298,"column":11,"nodeType":"246","endLine":298,"endColumn":30},{"ruleId":"244","severity":1,"message":"245","line":660,"column":11,"nodeType":"246","endLine":660,"endColumn":56},{"ruleId":"224","severity":1,"message":"243","line":4,"column":8,"nodeType":"226","messageId":"227","endLine":4,"endColumn":15},{"ruleId":"244","severity":1,"message":"245","line":80,"column":9,"nodeType":"246","endLine":83,"endColumn":10},{"ruleId":"244","severity":1,"message":"245","line":99,"column":9,"nodeType":"246","endLine":103,"endColumn":14},{"ruleId":"244","severity":1,"message":"245","line":122,"column":9,"nodeType":"246","endLine":122,"endColumn":67},{"ruleId":"224","severity":1,"message":"273","line":4,"column":8,"nodeType":"226","messageId":"227","endLine":4,"endColumn":13},{"ruleId":"233","severity":1,"message":"234","line":8,"column":5,"nodeType":"235","messageId":"236","endLine":10,"endColumn":6},{"ruleId":"244","severity":1,"message":"245","line":24,"column":27,"nodeType":"246","endLine":24,"endColumn":78},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'interval' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Header' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'banner1' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Container' is defined but never used.","'Icon' is defined but never used.","'money_transfer' is defined but never used.","'reff_bg' is defined but never used.","'setTableData' is assigned a value but never used.","'walletAddress' is assigned a value but never used.","'copySuccess' is assigned a value but never used.","'textAreaRef' is assigned a value but never used.","'getIfHideTable' is assigned a value but never used.","'Component' is defined but never used.","'ReactFlagsSelect' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'india' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'NavbarText' is defined but never used.","'FormGroup' is defined but never used.","'toggleLanguage' is assigned a value but never used.","'address' is assigned a value but never used.","'Bitcoin' is defined but never used.","'i18n' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","'level6' is defined but never used.","'Icon1' is defined but never used.","'Button' is defined but never used.","'BinaryCommision' is defined but never used.","'Main' is defined but never used.","'Promotional' is defined but never used.","'FirebaseDatabaseProvider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'firebaseDb' and 'renderReportItem'. Either include them or remove the dependency array.","ArrayExpression",["285"],"no-global-assign","no-unsafe-negation",{"desc":"286","fix":"287"},"Update the dependencies array to be: [firebaseDb, renderReportItem]",{"range":"288","text":"289"},[1731,1733],"[firebaseDb, renderReportItem]"]