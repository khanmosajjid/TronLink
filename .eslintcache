[{"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/index.js":"1","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/App.js":"2","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/reportWebVitals.js":"3","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/Statistics/Statistics.js":"4","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Main.js":"5","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/utils/index.js":"6","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/Statistics/PromotionalBanner/Promotion.js":"7","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/home.js":"8","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Header/Header.js":"9","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Footer/Footer.js":"10","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/Statistics/Main/Main.js":"11","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Popup/Popup.js":"12","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Body/Cards/Cards.js":"13","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Body/Body.js":"14","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Payment/Payment.js":"15","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/Statistics/Withdraw/Withdraw.js":"16","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/widget/BinaryCommisionCalc/BinaryCommision.js":"17","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/widget/widget.js":"18","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Youtube/Youtube.js":"19"},{"size":589,"mtime":1609075190207,"results":"20","hashOfConfig":"21"},{"size":12486,"mtime":1609075190207,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1608544534902,"results":"23","hashOfConfig":"21"},{"size":1663,"mtime":1608912924976,"results":"24","hashOfConfig":"21"},{"size":991,"mtime":1608817565912,"results":"25","hashOfConfig":"21"},{"size":384,"mtime":1609331674016,"results":"26","hashOfConfig":"21"},{"size":3571,"mtime":1609334815347,"results":"27","hashOfConfig":"21"},{"size":625,"mtime":1608817565912,"results":"28","hashOfConfig":"21"},{"size":2162,"mtime":1608912925000,"results":"29","hashOfConfig":"21"},{"size":584,"mtime":1608912925000,"results":"30","hashOfConfig":"21"},{"size":19496,"mtime":1609352321992,"results":"31","hashOfConfig":"21"},{"size":379,"mtime":1608912925012,"results":"32","hashOfConfig":"21"},{"size":1625,"mtime":1608912924996,"results":"33","hashOfConfig":"21"},{"size":7848,"mtime":1609154832700,"results":"34","hashOfConfig":"21"},{"size":7814,"mtime":1609352251776,"results":"35","hashOfConfig":"21"},{"size":1433,"mtime":1609351015367,"results":"36","hashOfConfig":"21"},{"size":1058,"mtime":1609154498426,"results":"37","hashOfConfig":"21"},{"size":4304,"mtime":1608912925016,"results":"38","hashOfConfig":"21"},{"size":1921,"mtime":1608544534898,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1luz6ym",{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/index.js",[],["92","93"],"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/App.js",["94","95","96","97"],"import \"./App.css\";\n\nimport Main from \"./components/Main\";\nimport Statistics from \"./Statistics/Statistics\";\nimport Utils from \"./utils\";\nimport { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport TronWeb from \"tronweb\";\n\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      totalUsers: null,\n      activeDeposits:[],\n      expiredDeposits:[],\n      levelTree:[],\n      tronWeb: {\n        installed: false,\n        loggedIn: false,\n      },\n      account: \"\",\n      // levels: [],\n    };\n    this.fetchPlatformData = this.fetchPlatformData.bind(this);\n    this.getLevelWiseCount = this.getLevelWiseCount.bind(this);\n    this.invest = this.invest.bind(this);\n    this.withdraw = this.withdraw.bind(this);\n    this.makeRoundOf = this.makeRoundOf.bind(this);\n  }\n\n  parseParams() {\n    let ref\n    function getUrlVars() {\n      var vars = [],\n        hash;\n      var hashes = window.location.href\n        .slice(window.location.href.indexOf(\"?\") + 1)\n        .split(\"&\");\n      for (var i = 0; i < hashes.length; i++) {\n        hash = hashes[i].split(\"=\");\n        vars.push(hash[0]);\n        vars[hash[0]] = hash[1];\n      }\n      return vars;\n    }\n     ref = getUrlVars()[\"ref\"];\n    if(ref!=null){\n      localStorage.setItem(\"ref\",ref);\n    }\n    console.log(\"ref\", ref);\n    \n  }\n  \n \n\n  makeRoundOf(num) {\n    return (num / 10 ** 6).toFixed(2);\n  }\n\n  async componentDidMount() {\n    await this.initTron();\n\n  \n   \n    \n  }\n\n  async initTron() {\n    // await new Promise((resolve) => {\n    //   const tronWebState = {\n    //     installed: !!window.tronWeb,\n    //     loggedIn: window.tronWeb && window.tronWeb.ready,\n    //   };\n\n    //   if (tronWebState.installed) {\n    //     this.setState({\n    //       tronWeb: tronWebState,\n    //     });\n\n    //     return resolve();\n    //   }\n\n    //   let tries = 0;\n\n    //   const timer = setInterval(() => {\n    //     if (tries >= 10) {\n    //       const TRONGRID_API = \"https://api.shasta.trongrid.io\";\n\n    //       window.tronWeb = new TronWeb(\n    //         TRONGRID_API,\n    //         TRONGRID_API,\n    //         TRONGRID_API\n    //       );\n\n    //       this.setState({\n    //         tronWeb: {\n    //           installed: false,\n    //           loggedIn: false,\n    //         },\n    //       });\n\n    //       clearInterval(timer);\n    //       return resolve();\n    //     }\n\n    //     tronWebState.installed = !!window.tronWeb;\n    //     tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n    //     if (!tronWebState.installed) return tries++;\n\n    //     this.setState({\n    //       tronWeb: tronWebState,\n    //     });\n\n    //     resolve();\n    //   }, 100);\n    // });\n\n\n\n    \n    await new Promise(resolve => {\n      const tronLoader = setInterval( async () => {\n        if (window.tronWeb && window.tronWeb.ready) {\n          await Utils.setTronWeb(window.tronWeb);\n          this.setState({ account: window.tronWeb.defaultAddress.base58,\n            contract: Utils.contract });\n          clearInterval(tronLoader)\n\n          this.getUserInfo(window.tronWeb.defaultAddress.base58);\n          this.fetchPlatformData();\n          this.parseParams();\n          console.log(\"window.tronWeb.defaultAddress.base58 ,\",window.tronWeb.defaultAddress.base58 )\n          resolve()\n        }\n      }, 500)\n    });\n\n\n   \n\n   \n\n  }\n\n  //refferer\n  async invest(entryFees) {\n    this.setState({ loading: true });\n    let ref=Utils.adminAddress;\n    let  localStorageId=localStorage.getItem('ref');\n    if(localStorageId){\n           ref=localStorageId;\n    }\n\n\n\n    console.log(\"refADDDD\",ref,localStorageId)\n    Utils.contract\n      .invest(ref)\n      .send({\n        from: window.tronWeb.defaultAddress.base58,\n        callValue: entryFees * 1000000,\n        shouldPollResponse: true,\n      })\n      .then((receipt) => {\n        console.log(\"success\");\n        console.log(receipt);\n      })\n      .catch((err) => {\n        console.log(\"error while investing\", err);\n      });\n  }\n\n\n\n  async getMyDeposits(address,maxDeposit){\n\n    let activeDeposits =[]\n    let expiredDeposits = []\n\n    for(let i = 0;i<maxDeposit;i++){\n\n      let deposit = await this.getMyDeposit(address,i)\n      console.log(\"depoistPre\",deposit,);\n      if(deposit){\n        if(deposit.isExpired){\n          expiredDeposits.push(deposit)\n        }else{\n          activeDeposits.push(deposit)\n\n        }\n      }\n\n     \n    }\n\n\n    this.setState({activeDeposits,expiredDeposits})\n  }\n\n\n\n\n  async getMyDeposit(add,index){\n\n    console.log(\"getMyDeposit\", Utils.contract)\n    let deposit = await  Utils.contract.getUserDepositInfo(add,index).call();\n    console.log(\"deposi\",deposit)\n    if(deposit){\n      let payload = {\n        id:index,\n        date:deposit._start.toNumber(),\n        amount:deposit._amount.toNumber()/10**6,\n        withdrawn:deposit._withdrawn.toNumber()/10**6,\n        isExpired:deposit._isExpired\n      }\n      console.log(\"depoist\",payload)\n\n      return payload\n    }\n     \n  }\n\n  async fetchPlatformData() {\n    let totalUsers = (\n      await Utils.contract.getTotalVolume().call()\n    ).toNumber();\n    console.log(\"users\", totalUsers);\n    let totalDepositAmount = (\n      await Utils.contract.getTotalDepositsAmount().call()\n    ).toNumber();\n    totalDepositAmount = this.makeRoundOf(totalDepositAmount);\n    console.log(totalDepositAmount + \"it is total ammmount\");\n    let totalWithdrawn = (\n      await Utils.contract.getTotalWithdrawn().call()\n    ).toNumber();\n    totalWithdrawn = this.makeRoundOf(totalWithdrawn);\n    console.log(totalWithdrawn, \" is total Withdrawn\");\n    let tradingPool = (\n      await Utils.contract.getAmountInTradingPool().call()\n    ).toNumber();\n    tradingPool = this.makeRoundOf(tradingPool);\n\n    let payload = {\n      totalUsers: totalUsers,\n      totalDepositAmount: totalDepositAmount,\n      totalWithdrawn: totalWithdrawn,\n      tradingPool: tradingPool,\n    };\n    this.setState(payload);\n  }\n\n  async getUserInfo(addr) {\n\n    console.log(\"fdfdd\",addr)\n    let userDailyProfit =  await Utils.contract.getUserDailyProfit(addr).call();\n    if(userDailyProfit){\n      userDailyProfit = userDailyProfit.toNumber()\n    }else{\n      userDailyProfit = 0\n    }\n    console.log(\"daily\", userDailyProfit);\n    let getBinaryBalanceLeftForWithdrawl = (\n      await Utils.contract.getBinaryBalanceLeftForWithdrawl(addr).call()\n    ).toNumber();\n    getBinaryBalanceLeftForWithdrawl = this.makeRoundOf(\n      getBinaryBalanceLeftForWithdrawl\n    );\n\n\n    userDailyProfit = userDailyProfit+getBinaryBalanceLeftForWithdrawl;\n    userDailyProfit = this.makeRoundOf(userDailyProfit);\n\n\n    console.log(\"getBinaryBalanceLeftForWithdrawl\",getBinaryBalanceLeftForWithdrawl)\n    \n    \n    \n    \n    \n    const userPersonalDepositProfit =\n      (await Utils.contract.getExtraProfit(addr).call()).toNumber() / 100;\n    let totalEarnedFromDailyProfit = (\n      await Utils.contract.totalEarnedFromDailyProfit(addr).call()\n    ).toNumber();\n    totalEarnedFromDailyProfit = this.makeRoundOf(totalEarnedFromDailyProfit);\n    let totalReferralCommissionEarned = (\n      await Utils.contract.getTotalReferralCommissionEarned(addr).call()\n    ).toNumber();\n    totalReferralCommissionEarned = this.makeRoundOf(\n      totalReferralCommissionEarned\n    );\n    const referralLevelsUnlocked = (\n      await Utils.contract.getReferralsLevelsUnlocked(addr).call()\n    ).toNumber();\n    let totalTeamDepositVolume = (\n      await Utils.contract.getTotalTeamDepositVolume(addr).call()\n    ).toNumber();\n    totalTeamDepositVolume = this.makeRoundOf(totalTeamDepositVolume);\n    console.log(\"total team deposit vol\", totalTeamDepositVolume);\n    let binaryCommissionEarnedSoFar = (\n      await Utils.contract.getBinaryCommissionEarnedSoFar(addr).call()\n    ).toNumber();\n    binaryCommissionEarnedSoFar = this.makeRoundOf(binaryCommissionEarnedSoFar);\n    const referrals = (\n      await Utils.contract.getReferrals(addr).call()\n    ).toNumber();\n    const totalTeamMembers = (\n      await Utils.contract.getTotalTeamMembers(addr).call()\n    ).toNumber();\n\n    let userTotalActiveDeposits = (\n      await Utils.contract.getUserTotalActiveDeposits(addr).call()\n    ).toNumber();\n    userTotalActiveDeposits = this.makeRoundOf(userTotalActiveDeposits);\n    const noOfTotalDeposits = (\n      await Utils.contract.getUserTotalNumberOfDeposits(addr).call()\n    ).toNumber();\n    let userTotalDeposits = (\n      await Utils.contract.getUserTotalDeposits(addr).call()\n    ).toNumber();\n    userTotalDeposits = this.makeRoundOf(userTotalDeposits);\n    let payload = {\n      userTotalDeposits: userTotalDeposits,\n      userTotalActiveDeposits: userTotalActiveDeposits,\n      noOfTotalDeposits: noOfTotalDeposits,\n      userDailyProfit: userDailyProfit,\n      userPersonalDepositProfit: userPersonalDepositProfit,\n      totalEarnedFromDailyProfit: totalEarnedFromDailyProfit,\n      totalReferralCommissionEarned: totalReferralCommissionEarned,\n      referralLevelsUnlocked: referralLevelsUnlocked,\n      totalTeamDepositVolume: totalTeamDepositVolume,\n      binaryCommissionEarnedSoFar: binaryCommissionEarnedSoFar,\n      referrals: referrals,\n      totalTeamMembers: totalTeamMembers,\n    };\n    console.log(\"Payload is \", payload);\n    let contractBalance = (\n      await Utils.contract.getContractBalance().call()\n    ).toNumber();\n    contractBalance = this.makeRoundOf(contractBalance);\n    console.log(\"contract balance\", contractBalance);\n    this.setState(payload);\n\n    this.getMyDeposits(window.tronWeb.defaultAddress.base58,noOfTotalDeposits);\n\n    let levelTree = []\n    for (var i = 0; i < 10; i++) {\n      let result = await this.getLevelWiseCount(this.state.account, i + 1);\n      console.log(result, \" level\", i + 1, \"-----\");\n\n      if(!result){\n        result = 0\n      }\n      let payload = {\n        levelNumber:i+1,\n        members:result\n\n      }\n\n      levelTree.push(payload)\n\n    }\n\n\n\n    this.setState({levelTree})\n\n\n\n\n\n  }\n\n  async getLevelWiseCount(addr, level) {\n    const levelWiseCount = (\n      await Utils.contract.getLevelWiseCount(addr, level).call()\n    ).toNumber();\n    return levelWiseCount;\n  }\n\n  async withdraw() {\n    Utils.contract\n      .withdraw()\n      .send({ from: window.tronWeb.defaultAddress.base58, callValue: 0 })\n      .then((res) => {\n        if (res == true) console.log(\"success\");\n      })\n      .catch((err) => {\n        console.log(\"error while withdrawing\", err);\n      });\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Main\n                totalDepositAmount={this.state.totalDepositAmount}\n                totalMembers={this.state.totalUsers}\n                totalWithdraw={this.state.totalWithdrawn}\n                tradingPool={this.state.tradingPool}\n              />\n            </Route>\n\n            <Route exact path=\"/stats\">\n              <Statistics\n                activeDeposits={this.state.activeDeposits}\n                expiredDeposits={this.state.expiredDeposits}\n                levelTree={this.state.levelTree}\n                userTotalDeposits={this.state.userTotalDeposits}\n                invest={this.invest}\n                totalEarnedFromDailyProfit={\n                  this.state.totalEarnedFromDailyProfit\n                }\n                totalReferralCommissionEarned={\n                  this.state.totalReferralCommissionEarned\n                }\n                referralLevelsUnlocked={this.state.referralLevelsUnlocked}\n                totalTeamDepositVolume={this.state.totalTeamDepositVolume}\n                binaryCommissionEarnedSoFar={\n                  this.state.binaryCommissionEarnedSoFar\n                }\n                referrals={this.state.referrals}\n                totalTeamMembers={this.state.totalTeamMembers}\n                withdraw={this.withdraw}\n                userDailyProfit={this.state.userDailyProfit}\n                userPersonalDepositProfit={this.state.userPersonalDepositProfit}\n                userTotalActiveDeposits={this.state.userTotalActiveDeposits}\n                noOfTotalDeposits={this.state.noOfTotalDeposits}\n                account={this.state.account}\n              />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/reportWebVitals.js",[],"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/Statistics/Statistics.js",["98"],"import React, { Component } from 'react';\nimport './Statistics.scss';\nimport Header from '../components/Header/Header';\nimport Main from './Main/Main';\nimport Promotional from './PromotionalBanner/Promotion';\nimport Footer from '../components/Footer/Footer';\n\nexport default class LandingPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"header-component\">\n\t\t\t\t\t<Header backgroundImage=\"#00000000\"                     \n />\n\t\t\t\t\t<h1>User Statistics</h1>\n\t\t\t\t</div>\n\n\t\t\t\t<Main\n\t\t\t\t  activeDeposits={this.props.activeDeposits}\n\t\t\t\t  expiredDeposits={this.props.expiredDeposits}\n\t\t\t\t  levelTree = {this.props.levelTree}\n\t\t\t\t\tuserTotalDeposits={this.props.userTotalDeposits}\n\t\t\t\t\tinvest={this.props.invest}\n\t\t\t\t\tuserTotalActiveDeposits={this.props.userTotalActiveDeposits}\n\t\t\t\t\tnoOfTotalDeposits={this.props.noOfTotalDeposits}\n\t\t\t\t\ttotalEarnedFromDailyProfit={this.props.totalEarnedFromDailyProfit}\n\t\t\t\t\ttotalReferralCommissionEarned={this.props.totalReferralCommissionEarned}\n\t\t\t\t\treferralLevelsUnlocked={this.props.referralLevelsUnlocked}\n\t\t\t\t\ttotalTeamDepositVolume={this.props.totalTeamDepositVolume}\n\t\t\t\t\tbinaryCommissionEarnedSoFar={this.props.binaryCommissionEarnedSoFar}\n\t\t\t\t\treferrals={this.props.referrals}\n\t\t\t\t\ttotalTeamMembers={this.props.totalTeamMembers}\n\t\t\t\t\twithdraw={this.props.withdraw}\n\t\t\t\t\tuserDailyProfit={this.props.userDailyProfit}\n                    userPersonalDepositProfit={this.props.userPersonalDepositProfit}\n                    account={this.props.account}\n\t\t\t\t/>\n\t\t\t\t<Promotional                     account={this.props.account}\n/>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Main.js",["99"],"import React, { Component } from 'react';\nimport './Main.scss';\nimport Header from './Header/Header';\nimport Home from './home';\nimport Footer from './Footer/Footer';\n\nexport default class Main extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\t//   componentWillReceiveProps(props) {\n\t//     console.log(\n\t//       \"this is main props \",\n\t//       props.totalDepositAmount,\n\t//       props.totalMembers,\n\t//       props.totalWithdraw\n\t//     );\n\t//   }\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t{/* {console.log(this.props.data + \" this is main state\")} */}\n\t\t\t\t<Header background=\"#05133a\" />\n\t\t\t\t<Home\n\t\t\t\t\ttotalDepositAmount={this.props.totalDepositAmount ? this.props.totalDepositAmount : '-'}\n\t\t\t\t\ttotalMembers={this.props.totalMembers ? this.props.totalMembers : '-'}\n\t\t\t\t\ttotalWithdraw={this.props.totalWithdraw ? this.props.totalWithdraw : '-'}\n\t\t\t\t\tinvest={this.props.invest}\n\t\t\t\t\ttradingPool={this.props.tradingPool}\n\t\t\t\t/>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/utils/index.js",[],"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/Statistics/PromotionalBanner/Promotion.js",["100","101","102","103"],"import React, { Component } from \"react\";\nimport { Container, Row, Input, Label,Button } from \"reactstrap\";\nimport \"./Promotion.scss\";\nimport banner1 from \"../../assets/banner1.png\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport smallBanner from \"../../assets/smallBanner.gif\"\nimport mediumBanner from \"../../assets/mediumBanner.gif\"\nimport largeBanner from \"../../assets/largeBanner.gif\"\n\nexport default class Promotion extends Component {\n\n\n  constructor(props){\n    super(props)\n    this.copyClipboard=this.copyClipboard.bind(this);\n    // this.getMyRefLink=this.getMyRefLink.bind(this)\n    this.state={\n      largeBannerCode:\"\",\n      mediumBannerCode:\"\",\n      smallBannerCode:\"\",\n\n    }\n  }\n   copyClipboard(code) {\n    var textField = document.createElement(\"textarea\");\n    textField.innerText = code\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand(\"copy\");\n    textField.remove();\n   \n\n    // setCopySuccess(\"Copied!\");\n    toast.success(\"Referral Link Copied\");\n  }\n\n\n  getSmallBannerCode(){\n    if(this.props.account){\n      return '<a href=\"'+this.getMyRefLink()+'\"> <img style=\"height:125px;width:125px\" src=\"https://trontiply.com/static/media/smallBanner.fd5be3a4.gif\"/> </a>'\n    }\n  }\n\n\n\n  getMediumBannerCode(){\n    if(this.props.account){\n      return '<a href=\"'+this.getMyRefLink()+'\"> <img style=\"height:60px;width:468px\" src=\"https://trontiply.com/static/media/mediumBanner.700dca68.gif\"/> </a>'\n    }\n  }\n\n\n\n  getLargeBannerCode(){\n    if(this.props.account){\n      return '<a href=\"'+this.getMyRefLink()+'\"> <img style=\"height:90px;width:728px\" src=\"https://trontiply.com/static/media/largeBanner.a434eb19.gif\"/> </a>'\n    }\n  }\n\n\n  getMyRefLink=()=>{\n    if(this.props.account){\n      return \"https://trontiply.com/?ref=\"+this.props.account\n    }\n  }\n\n\n\n\n\n\n\n  render() {\n    return (\n      <Container className=\"promotion\">\n        <h1>Promotional Banners</h1>\n        <src></src>\n        <img src={largeBanner} style={{marginTop: \"25px\",\n        height:90,width:728\n        }}></img>\n        <Row className=\"input-bar\">\n          <Label for=\"amount\"></Label>\n          <Input\n            type=\"text\"\n            name=\"amount\"\n            className=\"input-box\"\n            value={this.getLargeBannerCode()}\n\n          />\n          <Button className=\"promotion__button\" onClick={()=>{\n            this.copyClipboard(this.getLargeBannerCode())\n          }}>Copy</Button>\n        </Row>\n\n        <img src={mediumBanner} style={{height:60,width:468}}></img>\n        <Row className=\"input-bar\">\n          <Label for=\"amount\"></Label>\n          <Input\n            type=\"text\"\n            name=\"amount\"\n            value={this.getMediumBannerCode()}\n            className=\"input-box\"\n          />\n          <Button className=\"promotion__button\" onClick={()=>{\n            this.copyClipboard(this.getMediumBannerCode())\n          }}>Copy</Button>\n        </Row>\n        \n\n\n\n\n\n        <img src={smallBanner} style={{height:125,width:125}}></img>\n        <Row className=\"input-bar\">\n          <Label for=\"amount\"></Label>\n          <Input\n            type=\"text\"\n            name=\"amount\"\n            value={this.getSmallBannerCode()}\n            className=\"input-box\"\n          />\n          <Button className=\"promotion__button\" onClick={()=>{\n            this.copyClipboard(this.getSmallBannerCode())\n          }}>Copy</Button>\n        </Row>\n        \n        \n        \n        \n        <ToastContainer/>\n        \n      </Container>\n    );\n  }\n}\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/home.js",["104","105","106","107"],"import React, { Component } from 'react';\nimport './home.css';\nimport Header from './Header/Header';\nimport Body from './Body/Body';\nimport { Row, Col } from 'reactstrap';\n\nimport Payment from './Payment/Payment';\n\nexport default class Home extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"home\">\n\t\t\t\t<Body\n\t\t\t\t\ttotalDepositAmount={this.props.totalDepositAmount}\n\t\t\t\t\ttotalMembers={this.props.totalMembers}\n\t\t\t\t\ttotalWithdraw={this.props.totalWithdraw}\n\t\t\t\t\tinvest={this.props.invest}\n\t\t\t\t\ttradingPool={this.props.tradingPool}\n\t\t\t\t/>\n\n\t\t\t\t<Payment />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Header/Header.js",["108","109","110","111","112","113","114","115","116","117","118","119","120"],"import React, { Component,useEffect } from \"react\";\nimport { useState } from \"react\";\nimport \"./Header.scss\";\nimport { Container, Row, Col, Label, Input } from \"reactstrap\";\nimport logo from \"../../assets/logo.png\";\nimport { Icon } from \"semantic-ui-react\";\nimport tron from '../../assets/tron.jpeg'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n} from \"reactstrap\";\n\nconst Header = (props) => {\n  \n  const [isWalletConnected,setWalletConected] = useState(false);\n  const [walletAddress,setWalletAddress] = useState()\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n\n\n  useEffect(() =>{\n\n  \n\n    var obj = setInterval(async ()=>{\n      if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\n          clearInterval(obj)\n\n          let rawAdd = window.tronWeb.defaultAddress.base58\n          let address =rawAdd.substring(0,6)+\"...\"+\n          rawAdd.substr(rawAdd.length - 6);\n          setWalletAddress(rawAdd )\n          setWalletConected(true)\n      }\n  }, 10)\n  },[])\n\n\n  \n  return (\n    <Navbar dark expand=\"md\" fluid={true} className=\"header\" \n    style={{backgroundColor:\"\"+props.background}}>\n      <NavbarBrand className=\"header__logo\"  href=\"/\">\n        <img className=\"logo\" src={logo} alt=\"compony-logo\"></img>\n      </NavbarBrand>\n      <NavbarToggler onClick={toggle} className=\"mr-2\" />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"mr-auto\" navbar>\n        <Row className=\"header__containt-report\" noGutters>\n  <Col lg={2} />\n  \n  <Col lg={3} className=\"header__containt-weeklyreport\">\n    <Icon name=\"calendar\" style={{ color: \"#eb475b\"}} size={20}></Icon>\n    <p>Weekly Trading reports</p>\n  </Col>\n  <Col\n    lg={6}\n    className=\"header__containt-dailyreport\"\n    style={{ marginRight: \"0px !important\" }}\n  >\n    <img src={tron} className=\"tron-logo\" style={{height:15}}/>\n    {isWalletConnected?<p>{walletAddress}</p>:\"Connect Wallet\"}\n    \n  </Col>\n</Row>\n        </Nav>\n      </Collapse>\n    </Navbar>\n  );\n};\nexport default Header;\n\n\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Footer/Footer.js",[],"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/Statistics/Main/Main.js",["121","122","123","124","125","126","127","128","129","130","131","132","133","134","135"],"import React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Container, Row, Col, Label, Input, Button, Table } from \"reactstrap\";\nimport \"./Main.scss\";\nimport { Icon } from \"semantic-ui-react\";\nimport Withdraw from \"../Withdraw/Withdraw\";\nimport icon1 from \"../../assets/icon1.png\";\nimport icon2 from \"../../assets/icon2.png\";\nimport icon3 from \"../../assets/icon3.png\";\nimport icon4 from \"../../assets/icon4.png\";\nimport icon5 from \"../../assets/icon5.png\";\nimport icon6 from \"../../assets/icon6.png\";\nimport icon7 from \"../../assets/icon7.png\";\nimport icon8 from \"../../assets/icon8.png\";\nimport icon9 from \"../../assets/icon9.png\";\nimport icon10 from \"../../assets/icon10.png\";\nimport icon11 from \"../../assets/icon11.png\";\nimport deposit from \"../../assets/deposit.png\";\nimport QRCode from \"qrcode.react\";\nimport reff_icon from \"../../assets/reff-icon.png\";\n// import money_transfer from \"../../assets/money-transfer.png\";\nimport money_transfer from \"../../assets/network.png\";\n\nimport Popup from \"../../components/Popup/Popup\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Card from \"../../components/Body/Cards/Cards\";\nimport moment from \"moment\";\nimport reff_bg from \"../../assets/reff-bg.png\";\n\nconst levelColors = [\n  \"#0492ff\",\n  \"#ff3956\",\n  \"#ff9600\",\n  \"#51ce91\",\n  \"#0492ff\",\n  \"#ff3c5e\",\n  \"#ff9600\",\n  \"#51ce91\",\n  \"#ff3c5e\",\n];\nfunction Main(props) {\n  const [activeDeposits, setActiveDeposits] = useState([]);\n\n  const [expiredDeposits, setExpiredDeposits] = useState([]);\n  const [tableData, setTableData] = useState(false);\n  const [walletAddress, setWalletAddress] = useState(false);\n\n  const getReadableTime = (time) => {\n    return moment(time * 1000).format(\"DD/MMM/YYYY\");\n  };\n\n  useEffect(() => {\n    setActiveDeposits(props.activeDeposits);\n  }, [props.activeDeposits]);\n\n  useEffect(() => {\n    setLevelTree(props.levelTree);\n  }, [props.levelTree]);\n\n  useEffect(() => {\n    setWalletAddress(props.account);\n    setRefLink(getMyRefLink(props.account));\n    console.log(\"pros.accout\", props.account);\n  }, [props.account]);\n\n  useEffect(() => {\n    setExpiredDeposits(props.expiredDeposits);\n  }, [props.expiredDeposits]);\n  const [levelTree, setLevelTree] = useState([]);\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [depositAmount, setDepositAmount] = useState(0);\n  const [tableHeading, setTableHeading] = useState(\"Active Deposit\");\n  const [isActiveDepositTableActive, setActiveDepositTableActive] = useState(\n    false\n  );\n  const [copySuccess, setCopySuccess] = useState(\"\");\n  const [refLink, setRefLink] = useState();\n  const [tableStartColor, setTableStartColor] = useState(\"\");\n  const [tableEndColor, setTableEndColor] = useState(\"\");\n  const [tableHeaderStartColor, setTableHeaderStartColor] = useState(\"\");\n  const [tableHeaderEndColor, setTableHeaderEndColor] = useState(\"\");\n  const textAreaRef = useRef(null);\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const renderLevelTree = () => {\n    let tree = [];\n\n    for (let level of levelTree) {\n      tree.push(\n        // <Col lg={2} xs={3} className=\"box\">\n        //   Level {level.levelNumber} | Members {level.members}\n        // </Col>\n\n        <Col lg={3} style={{ marginBottom: \"2%\", fontWeight: \"600\" }}>\n          <p>\n            Level {level.levelNumber} =\n            <span\n              style={{\n                color: levelColors[level.levelNumber - 1],\n                fontWeight: \"600\",\n              }}\n            >\n              {\" \"}\n              Members {level.members}\n            </span>\n          </p>\n        </Col>\n      );\n      // console.log(\"level\");\n    }\n    // console.log(\"hello\");\n    <h1>hello i am level</h1>;\n    return tree;\n  };\n\n  const getLevelRank = () => {\n    let number = props.referralLevelsUnlocked;\n\n    if (number <= 2) {\n      return \"Starter\";\n    } else if (number <= 3) {\n      return \"Bronze\";\n    } else if (number <= 4) {\n      return \"Platinum\";\n    } else if (number <= 5) {\n      return \"Premium\";\n    } else if (number <= 6) {\n      return \"Titanium\";\n    } else if (number <= 7) {\n      return \"Silver\";\n    } else if (number <= 8) {\n      return \"Gold\";\n    } else if (number <= 9) {\n      return \"Diamond\";\n    } else if (number <= 10) {\n      return \"Super Gold\";\n    }\n  };\n  function copyToClipboard(e) {\n    var textField = document.createElement(\"textarea\");\n    textField.innerText = refLink;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand(\"copy\");\n    textField.remove();\n\n    setCopySuccess(\"Copied!\");\n    toast.success(\"Referral Link Copied\");\n  }\n\n  const renderDepositTableItem = () => {\n    let items = [];\n\n    let data = [];\n\n    if (isActiveDepositTableActive) {\n      data = [...activeDeposits];\n    } else {\n      data = [...expiredDeposits];\n    }\n\n    for (let item of data) {\n      items.push(\n        <tr>\n          <th scope=\"row\">{getReadableTime(item.date)}</th>\n          <td>{item.amount}</td>\n\n          <td>{item.withdrawn}</td>\n        </tr>\n      );\n    }\n\n    if (items.length == 0) {\n      // setTableData(true)\n      console.log(tableData);\n      return <h3>No data</h3>;\n    } else {\n      return items;\n    }\n  };\n\n  const getMyRefLink = (addr) => {\n    return \"https://trontiply.com/?ref=\" + addr;\n  };\n\n  const getIfHideTable = () => {\n    if (isActiveDepositTableActive) {\n      if (activeDeposits.length == 0) {\n        return true;\n      }\n    } else {\n      if (expiredDeposits.length == 0) {\n        return true;\n      }\n    }\n  };\n  const makeDeposit = () => {\n    // let depositAmount = depositAmount;\n\n    //todo 1000 krna h\n    if (depositAmount < 100) {\n      //Show error\n\n      toast.error(\"Minimum Deposit Amount is 100trx!\");\n    } else {\n      makeDepositTransaction(depositAmount);\n    }\n  };\n\n  const makeDepositTransaction = (amount) => {\n    console.log(\"propos12\", amount);\n    props.invest(amount);\n  };\n\n  return (\n    <div className=\"main\">\n      <Row className=\"main__resultcard\">\n        <Row className=\"total-result1\">\n          <Col lg={3} className=\"card1\">\n            {refLink ? <QRCode value={refLink} /> : null}\n          </Col>\n          <Col lg={9} className=\"card2\">\n            <Row className=\"ref-main\">\n              <Col lg={2} className=\"refferal-logo\">\n                <img\n                  src={reff_icon}\n                  style={{\n                    height: \"55px\",\n                    width: \"55px\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    display: \"block\",\n                  }}\n                ></img>\n              </Col>\n\n              <Col lg={10} className=\"input-col\">\n                {/* <img src={reff_bg}></img> */}\n                <Label for=\"amount\"></Label>\n                <Row>\n                  <Col lg={12} style={{ display: \"flex\" }}>\n                    <Input\n                      onChange={(t) => {\n                        // setDepositAmount(t.target.value);\n                      }}\n                      type=\"text\"\n                      name=\"amount\"\n                      id=\"amount\"\n                      value={refLink}\n                      className=\"ref-input\"\n                      placeholder=\"Enter Amount\"\n                    />\n                    <Button className=\"ref-copy\" onClick={copyToClipboard}>\n                      <h5>Copy</h5>\n                    </Button>\n                  </Col>\n                </Row>\n\n                {/* <h3>Refferral Link</h3>\n                <div className=\"volume\"> */}\n                {/* <textarea\n                  id=\"link\"\n                  style={{ margin: \"0px\", color: \"white\", fontWeight: \"600\",width:\"100%\" }}\n                  ref={textAreaRef}\n                  onClick={copyToClipboard}\n                  value={refLink}\n                > */}\n\n                {/* <h4\n                    onClick={() => {\n                      copyToClipboard();\n                    }}\n                    id=\"link\"\n                  >\n                    {refLink}\n                  </h4> */}\n\n                {/* </textarea> */}\n                {/* </div> */}\n                {/* <div className=\"volume2\">\n                 \n                </div> */}\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Row>\n      {/* <Row className=\"main__refferral-link\">\n        <p>\n          <span>\n            <Icon name=\"paperclip\"></Icon>Refferal Link :{\" \"}\n          </span>\n          QR code for Refferral link\n        </p>\n      </Row> */}\n      <Row className=\"main__deposit\">\n        <div className=\"deposit-icon\">\n          <img src={deposit}></img>\n        </div>\n\n        <h6>Make A Deposit</h6>\n        <Label for=\"amount\"></Label>\n        <Input\n          onChange={(t) => {\n            setDepositAmount(t.target.value);\n          }}\n          type=\"text\"\n          name=\"amount\"\n          id=\"amount\"\n          value={depositAmount}\n          className=\"input-box\"\n          placeholder=\"Enter Amount\"\n        />\n        <Button\n          className=\"deposit__button\"\n          onClick={() => {\n            // props.invest(document.getElementById(\"amount\").value);\n            makeDeposit();\n          }}\n        >\n          Confirm Deposit\n        </Button>\n      </Row>\n      <Row className=\"cards\">\n        <Card\n          card1Name=\"Your Daily Profit\"\n          card2Name=\"Basic Profit\"\n          card3Name=\"Personal Deposit Bonus\"\n          card4Name=\"Available Account Balance\"\n          card1Data={\n            (1.2 + parseFloat(props.userPersonalDepositProfit)).toFixed(2) +\n            \" %\"\n          }\n          card2Data=\"1.20%\"\n          card3Data={props.userPersonalDepositProfit}\n          card4Data={props.userDailyProfit}\n        ></Card>\n      </Row>\n      <Row className=\"withdraw\">\n        <Button\n          className=\"withdraw__heading\"\n          onClick={() => {\n            props.withdraw();\n          }}\n        >\n          <h5>Withdraw Funds</h5>\n        </Button>\n        <Button\n          className=\"withdraw__heading\"\n          onClick={() => {\n            setTableHeading(\"Active Deposits\");\n            togglePopup();\n            setActiveDepositTableActive(true);\n            setTableStartColor(\"#f19539\");\n            setTableEndColor(\"#f3037e\");\n            setTableHeaderStartColor(\"#79dbfb\")\n            setTableHeaderEndColor(\"#2794e5\")\n          }}\n        >\n          <h5>View Active Deposits</h5>\n        </Button>\n        <Button\n          className=\"withdraw__heading\"\n          onClick={() => {\n            setTableHeading(\"Expired Deposits\");\n            setActiveDepositTableActive(false);\n            togglePopup();\n            setTableStartColor(\"#79dbfb\");\n            setTableEndColor(\"#2794e5\");\n            setTableHeaderStartColor(\"#f19539\")\n            setTableHeaderEndColor(\"#f3037e\")\n          }}\n        >\n          <h5>View Expired Deposits</h5>\n        </Button>\n        {isOpen && (\n          <Popup\n            backGround=\"white\"\n            content={\n              <>\n                <span className=\"close-icon\" onClick={togglePopup}>\n                  x\n                </span>\n                <h1\n                  style={{\n                    background:\n                      \"linear-gradient(262deg,\"+\n                      tableStartColor +\n                      \" 8%,\"+\n                      tableEndColor +\n                      \" 98%)\"\n                  }}\n                  className=\"table-header\"\n                >\n                  {tableHeading}\n                </h1>\n                <Table hover responsive bordered striped>\n                  <thead style={{\n                    background:\n                      \"linear-gradient(262deg,\"+\n                      tableHeaderStartColor +\n                      \" 8%,\"+\n                      tableHeaderEndColor +\n                      \" 98%)\"\n                  }} className=\"table-header-data\">\n                    <tr>\n                      <th>Date</th>\n                      <th>Amount</th>\n                      <th>Withdrawal</th>\n                    </tr>\n                  </thead>\n                  <tbody>{renderDepositTableItem()}</tbody>\n                </Table>\n                <Row style={{ width: \"100%\" }}>\n                  <Col lg={12} className=\"table-btn\">\n                    <Button\n                      className=\"withdraw__heading\"\n                      onClick={() => {\n                        togglePopup();\n                      }}\n                    >\n                      <h5>Close</h5>\n                    </Button>\n                  </Col>\n                </Row>\n              </>\n            }\n          />\n        )}\n\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Active Deposits Sums\"\n            data={props.userTotalActiveDeposits}\n            icon={icon8}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Number of Total Deposits\"\n            data={props.noOfTotalDeposits}\n            icon={icon1}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n\n        <span></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Total Earned From Daily Profits\"\n            data={props.totalEarnedFromDailyProfit}\n            icon={icon1}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Earning Cap\"\n            data={\n              2 * props.userTotalDeposits - props.totalEarnedFromDailyProfit > 0\n                ? 2 * props.userTotalDeposits - props.totalEarnedFromDailyProfit\n                : 0\n            }\n            icon={icon8}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Total Refferal Commision Earned\"\n            data={props.totalReferralCommissionEarned}\n            icon={icon9}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Refferals Level Unlocked\"\n            data={props.referralLevelsUnlocked}\n            icon={icon7}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Total Team Deposits Volume in 10 levels\"\n            data={props.totalTeamDepositVolume}\n            icon={icon6}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Your Current rank\"\n            icon={icon5}\n            data={getLevelRank()}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Binary Qualification\"\n            data={props.referralLevelsUnlocked >= 7 ? \"Yes\" : \"No\"}\n            icon={icon3}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Binary Commision Earned so far\"\n            data={props.binaryCommissionEarnedSoFar}\n            icon={icon2}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#79dafa -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Direct Refferals\"\n            data={props.referrals}\n            icon={icon4}\n            color=\"#2696e5\"\n            bgStartColor=\"#79dbfb \"\n            bgEndColor=\"#2794e5\"\n          ></Withdraw>\n        </Col>\n        <span className=\"spn\"></span>\n        <Col\n          lg={6}\n          xs={6}\n          className=\"withdraw-cards\"\n          style={{ boxShadow: \"#f19539 -1px 1px 10px 1px\" }}\n        >\n          <Withdraw\n            heading=\"Total Team Members\"\n            data={props.totalTeamMembers}\n            icon={icon10}\n            color=\"#dc5063\"\n            bgStartColor=\"#f19539\"\n            bgEndColor=\"#f3037e\"\n          ></Withdraw>\n        </Col>\n      </Row>\n      <Row className=\"levels\">\n        <div className=\"level-icon\">\n          <img src={icon11} style={{ height: \"50px\" }}></img>\n        </div>\n\n        <Row className=\"widget-level-box\">\n          {renderLevelTree()}\n\n          {/* <Col lg={2} xs={3} className=\"box\">\n            Level 1\n          </Col>\n          \n          <Col lg={2} xs={3} className=\"box\">\n            Level 2\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 3\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 4\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 5\n          </Col>\n\n          <Col lg={2} xs={3} className=\"box\">\n            Level 6\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 7\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 8\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 9\n          </Col>\n          <Col lg={2} xs={3} className=\"box\">\n            Level 10\n          </Col> */}\n        </Row>\n      </Row>\n\n      <ToastContainer />\n    </div>\n  );\n}\nexport default Main;\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Popup/Popup.js",["136","137"],"import React from \"react\";\nimport { Container, Row } from \"reactstrap\";\nimport \"./Popup.scss\";\n\nconst Popup = (props) => {\n\n    \n    // const toggle=()=>{\n         \n    // }\n  return (\n    <div className=\"popup-box\">\n      <div className=\"box\" style={{backgroundColor:\"\"+props.backGround}}>\n        \n        {props.content}\n      </div>\n    </div>\n  );\n};\n\nexport default Popup;\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Body/Cards/Cards.js",[],"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Body/Body.js",["138","139","140","141","142","143"],"import React, { Component } from \"react\";\nimport { useState } from \"react\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport \"./Body.scss\";\nimport { Icon } from \"semantic-ui-react\";\nimport Cards from \"./Cards/Cards\";\nimport Youtube from \"../Youtube/Youtube\";\nimport Bitcoin from \"../../assets/bitcoin.png\";\nimport bodyicon1 from \"../../assets/bodyicon1.png\";\nimport bodyicon2 from \"../../assets/bodyicon2.png\";\nimport bodyicon3 from \"../../assets/bodyicon3.png\";\nimport videohead from \"../../assets/videohead.png\";\nimport Popup from \"../Popup/Popup\";\n\nfunction Body(props) {\n  // constructor(props) {\n  //   super(props);\n  //   this.state={\n  //     isOpen:false,\n  //   }\n  //   this.togglePopup=this.togglePopup.bind(this);\n  // }\n  //  togglePopup(){\n  //   this.state.isOpen=!this.state.isOpen;\n  //   console.log(this.state.isOpen);\n  // }\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <Container fluid={true} className=\"body-main\">\n      <Row className=\"body1\">\n        <Row style={{ width: \"100%\" }}>\n          <Col lg={6} className=\"body-main__content\">\n            <h1>Multiply</h1>\n            <h2>\n              Your <span>Tron</span> With US\n            </h2>\n            <Col lg={12} className=\"body-main__list\">\n              <Icon\n                name=\"check circle outline\"\n                style={{\n                  marginTop: \"7px\",\n                  marginLeft: \"5px\",\n                  color: \"#184fda\",\n                }}\n              ></Icon>\n              <p style={{marginLeft:\"2px\"}}>Earn 200% on your deposit</p>\n            </Col>\n            <Col lg={12} className=\"body-main__list\">\n              <Icon\n                name=\"check circle outline\"\n                style={{\n                  marginTop: \"7px\",\n                  marginLeft: \"5px\",\n                  color: \"#184fda\",\n                }}\n              ></Icon>\n              <p style={{marginLeft:\"2px\"}}>Get upto 1.40% Profit every day</p>\n            </Col>\n            <Col lg={12} className=\"body-main__list\">\n              <Icon\n                name=\"check circle outline\"\n                style={{\n                  marginTop: \"7px\",\n                  marginLeft: \"5px\",\n                  color: \"#184fda\",\n                }}\n              ></Icon>\n              <p style={{marginLeft:\"2px\"}}>Stable & Real Profits generated By Forex trading</p>\n            </Col>\n            <Col lg={12} className=\"body-main__list\">\n              <Icon\n                name=\"check circle outline\"\n                style={{\n                  marginTop: \"7px\",\n                  marginLeft: \"5px\",\n                  color: \"#184fda\",\n                }}\n              ></Icon>\n              <p style={{marginLeft:\"2px\"}}>\n              No More Ponzi Contracts where most of the \n              people end up losing their money\n              </p>\n            </Col>\n            <Col lg={12} className=\"body-main__list\">\n              <Icon\n                name=\"check circle outline\"\n                style={{\n                  marginTop: \"7px\",\n                  marginLeft: \"5px\",\n                  color: \"#184fda\",\n                }}\n              ></Icon>\n              <p style={{marginLeft:\"2px\"}}>Weekly Trading Reports for 100% transparency </p>\n            </Col>\n            <Col lg={12} className=\"body-main__list\">\n              <Icon\n                name=\"check circle outline\"\n                style={{\n                  marginTop: \"7px\",\n                  marginLeft: \"5px\",\n                  color: \"#184fda\",\n                }}\n              ></Icon>\n              <p style={{marginLeft:\"2px\"}}>\n              Massive Binary Commissions for\n               Leaders & Team builders\n              </p>\n            </Col>\n            <Button\n              className=\"body-main__button\"\n              onClick={() => {\n                // var refferal = document.getElementById(\"refferal\").value;\n                // this.props.invest(refferal, 1000000000);\n                // togglePopup();\n                window.location.href = \"/stats\";\n\n              }}\n            >\n              Participate now\n            </Button>\n            {isOpen && (\n              <Popup backGround=\"#4b9afb\"\n                content={\n                  <>\n                    <h2>Wallet Statistics</h2>\n                    <Row className=\"popup-row\">\n                      <h3>Your Trx Wallet Address</h3>\n                      <Col lg={12} xs={12}>\n                        <input placeholder=\"adijflak45\"></input>\n                      </Col>\n                      <Col lg={12} xs={12} className=\"daily-profit\">\n                        <Col lg={6} className=\"profit-input\">\n                          <h3>Your Current daily profit</h3>\n                          <h4>0</h4>\n                        </Col>\n                        <Col lg={6} className=\"profit-data\">\n                          <h3>Basic Profit: 0%</h3>\n                          <h3>Hold Bonus: 0%</h3>\n                          <h3>Abstract Bonus: 0%</h3>\n                        </Col>\n                      </Col>\n                      <Col lg={12} xs={12} className=\"user-profit\">\n                        <Col lg={6} className=\"profit-input\">\n                          <h3>Available Withdraw balance</h3>\n                          <h4>0 TRX</h4>\n                        </Col>\n                        <Col lg={6} className=\"profit-data\">\n                          <h3>Request Withdraw</h3>\n                          <Button\n                            className=\"body-main__button\"\n                            onClick={() => {}}\n                          >\n                            Withdraw\n                          </Button>\n                        </Col>\n                      </Col>\n                    </Row>\n                    \n                  </>\n                }\n                handleClose={togglePopup}\n              />\n            )}\n          </Col>\n          <Col lg={6} className=\"body-main__bitcoin\">\n            {/* <img src={Bitcoin} alt=\"bitcoin\" style={{width:\"80%\"}}></img> */}\n          </Col>\n        </Row>\n      </Row>\n      <Row className=\"body-main__footer\">\n        <Row className=\"footer-body\">\n          <Col lg={4} xs={12} className=\"footer-content\">\n            <img src={bodyicon1} style={{ marginRight: \"37px\" }}></img>\n            <p>Check Our Contract</p>\n          </Col>\n          <Col\n            lg={4}\n            xs={12}\n            className=\"footer-content\"\n            style={{\n              borderRight: \"2px solid #39475b\",\n              borderLeft: \"2px solid #39475b\",\n            }}\n          >\n            <img src={bodyicon2} style={{ marginRight: \"10px\" }}></img>\n            <p>Check Our Complete Plan</p>\n          </Col>\n          <Col lg={4} xs={12} className=\"footer-content\">\n            <img src={bodyicon3} style={{ marginRight: \"10px\" }}></img>\n            <p>Check Our Weekly Reports</p>\n          </Col>\n        </Row>\n      </Row>\n\n      <Row className=\"body-main__cards\">\n        <Cards\n          card1Name=\"Total Deposits\"\n          card2Name=\"Total Members\"\n          card3Name=\"Total Withdrawn\"\n          card4Name=\"Amount in Trading Pool\"\n          card1Data={props.totalDepositAmount?props.totalDepositAmount:0}\n          card2Data={props.totalMembers?props.totalMembers:0}\n          card3Data={props.totalWithdraw?props.totalWithdraw:0}\n          card4Data={props.tradingPool?props.tradingPool:0}\n        ></Cards>\n      </Row>\n      <Row style={{ marginBottom: \"-5%\", marginTop: \"-7%\" }}>\n        <img\n          src={videohead}\n          style={{\n            width: \"100%\",\n          }}\n        ></img>\n      </Row>\n      <Row className=\"youtube-vid\">\n        <Youtube></Youtube>\n      </Row>\n    </Container>\n  );\n}\nexport default Body;\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Payment/Payment.js",[],"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/Statistics/Withdraw/Withdraw.js",["144","145","146"],"import React, { Component } from 'react';\nimport { Container,Row,Col } from 'reactstrap';\nimport './Withdraw.scss';\nimport Icon1 from '../../assets/icon1.png'\n\nexport default class Withdraw extends Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return(\n            <Container fluid={true} className=\"withdraw-card\"\n             style={{background:\"linear-gradient(262deg,\"+\n            this.props.bgStartColor +\" 8%,\" \n            + this.props.bgEndColor+ \" 98%)\",height:\"100%\"}}>\n                <Row className=\"withdraw-card__main\">\n                    <Col lg={3} xs={12} style={{padding:\"0px !important\"}} className=\"card-head\">\n                        <div className=\"icon\"\n                        style={{background:\"linear-gradient(262deg,\"+\n                        this.props.bgStartColor +\" 8%,\" \n                        + this.props.bgEndColor+ \" 98%)\"}}\n                        >\n                          <img src={this.props.icon} style={{padding:\"8px\"}}></img>\n                        </div>\n                    </Col>\n                    <Col lg={9} xs={12} style={{padding:\"0px !important\",color:\"white\"}} className=\"card-body\">\n                         <h6 style={{fontWeight:\"600\"}}>{this.props.heading}</h6>\n                         <h2 style={{color:\"white\"}}>{this.props.data}</h2>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/widget/BinaryCommisionCalc/BinaryCommision.js",[],"/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/widget/widget.js",["147","148","149","150","151","152","153"],"import React, { Component } from \"react\";\nimport { Button, Col, Container, Row } from \"reactstrap\";\nimport \"./widget.scss\";\nimport { Icon } from \"semantic-ui-react\";\nimport BinaryCommision from \"./BinaryCommisionCalc/BinaryCommision\";\n\nexport default class Widget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name,\n      trx: this.props.trx,\n      logo: this.props.logo,\n      // level: this.props.level,\n      binaryCommision: this.props.binaryCommision,\n    };\n  }\n\n  render() {\n    return (\n      <Container className=\"widget\">\n        <Row\n          className=\"widget-box\"\n          style={{ border: \"1px solid \" + this.props.color }}\n        >\n          <Col\n            lg={3}\n            className=\"widget-logo\"\n            style={{ borderRight: \"1px solid \" + this.props.color }}\n          >\n            <div\n              className=\"widget-logo-style\"\n              style={{\n                background:\n                  \"linear-gradient(262deg,\" +\n                  this.props.bgStartColor +\n                  \" 8%,\" +\n                  this.props.bgEndColor +\n                  \" 98%)\",\n              }}\n            >\n              <img src={this.props.image} style={{ height: \"75px\" }}></img>\n            </div>\n          </Col>\n          <Col lg={9} className=\"widget-details\">\n            <h3>\n              <span style={{ color: \"\" + this.props.color ,fontSize:32}}>\n                {this.props.levelName}{\" \"}\n              </span>\n            </h3>\n            <Row style={{width:\"100%\",marginBottom:\"8px\"}}>\n              <Col className=\"details-requirements\" style={{padding: \"0px\" }}>\n                <img src={this.props.icon1} style={{ height: \"20px\" }}></img>\n\n                <p style={{marginLeft:\"5px\"}}>\n                  <span style={{fontWeight:\"600\"}}>\n                  Requirements:\n                  </span>\n                  <span\n                    style={{ color: \"\" + this.props.color, fontWeight: \"600\" }}\n                  >\n                    {this.props.levelamount}\n                  </span>\n                  {this.props.requirement}\n                </p>\n              </Col>\n            </Row>\n\n            <Row style={{ width: \"100%\" }}>\n              <Col\n                className=\"details-requirements\"\n                style={{padding: \"0px\" }}\n              >\n                <img src={this.props.icon2} style={{ height: \"20px\" }}></img>\n\n                <p style={{ fontWeight: \"600\" ,marginLeft:\"5px\"}}>\n                  Commission upto {this.props.level} Levels\n                </p>\n              </Col>\n            </Row>\n\n            <Row className=\"widgets-level-box\">\n              {\n          \n              [...Array(parseInt(this.props.levelNumber.length))].map(\n                (elementInArray, index) => (\n                  <Col\n                    lg={3}\n                    style={{ marginBottom: \"2%\", fontWeight: \"600\" }}\n                    key={index}\n                  >\n                    <p>\n                      Level {index + 1} =\n                      <span\n                        style={{\n                          color: \"\" + this.props.color,\n                          fontWeight: \"600\",\n                        }}\n                      >\n                        {this.props.levelNumber[index]}\n                      </span>\n                    </p>\n                  </Col>\n                )\n              )}\n            </Row>\n            <Row style={{ width: \"100%\" }}>\n              <Col\n                className=\"details-requirements\"\n                style={{padding: \"0px\" }}\n              >\n                <img src={this.props.binaryCommisionIcon} style={{ height: \"20px\" }}></img>\n\n                <p style={{ fontWeight: \"600\",marginLeft:\"5px\" }}>\n                  {this.props.binaryCommision} <span\n                        style={{\n                          color: \"\" + this.props.color,\n                          fontWeight: \"600\",\n                        }}\n                      >\n                        {this.props.binaryCommisionPerc}\n                      </span>\n                      {this.props.binaryCommisionInfo}\n                </p>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","/home/shandroid/Desktop/bird/products/Fiverr/clients/akashmuch/trontiply/website/TronLink/src/components/Youtube/Youtube.js",["154","155","156","157"],"import React, { Component } from \"react\";\nimport { Container, Row,Col } from \"reactstrap\";\nimport \"./Youtube.scss\";\nimport dot from \"../../assets/dot.png\";\nimport numberLogo from '../../assets/numberLogo.png';\nimport location from '../../assets/location.png'\nexport default class Youtube extends Component {\n  render() {\n    return (\n      <Container className=\"youtube\">\n        <Row className=\"youtube__card\">\n          <iframe\n            src=\"https://www.youtube.com/embed/E7wJTI-1dvQ\"\n            frameborder=\"0\"\n            allow=\"autoplay; encrypted-media\"\n            allowfullscreen\n            title=\"video\"\n          />\n        </Row>\n        <Row className=\"compony-detail\">\n          <Row style={{width:\"93%\"}}>\n          <img src={dot}></img>\n\n          </Row>\n          <Row className=\"detail-header1\">\n          <Col lg={3} className=\"detail-header\">\n            \n            <p>Officially</p>\n            <h3 style={{textAlign:\"start\"}}>Registered Company</h3>\n          </Col>\n          <Col lg={4} className=\"detail\">\n             \n              <div className=\"detail-card\">\n              <img src={numberLogo} style={{height:\"40px\"}}></img>\n              <Row className=\"compony-number\">\n                  <h6>Company Number</h6>\n                  <p>12345678</p>\n              </Row>\n              </div>\n\n          </Col>\n          \n          <span style={{marginLeft:\"10px\"}}></span>\n          <Col lg={4} className=\"detail\">\n        <div className=\"address-card\">\n              <img src={location} style={{height:\"40px\"}}></img>\n              <Row className=\"compony-number\">\n                  <h6>Company Number</h6>\n                  <p>12345678</p>\n              </Row>\n              </div>\n        </Col>\n            \n          </Row>\n         \n          <Row className=\"detail-footer\">\n          <img src={dot}></img>\n          </Row>\n        </Row>\n        \n      </Container>\n    );\n  }\n}\n",["158","159"],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":7,"column":50,"nodeType":"166","messageId":"167","endLine":7,"endColumn":54},{"ruleId":"164","severity":1,"message":"168","line":8,"column":8,"nodeType":"166","messageId":"167","endLine":8,"endColumn":15},{"ruleId":"164","severity":1,"message":"169","line":10,"column":7,"nodeType":"166","messageId":"167","endLine":10,"endColumn":25},{"ruleId":"170","severity":1,"message":"171","line":392,"column":17,"nodeType":"172","messageId":"173","endLine":392,"endColumn":19},{"ruleId":"174","severity":1,"message":"175","line":9,"column":2,"nodeType":"176","messageId":"177","endLine":11,"endColumn":3},{"ruleId":"174","severity":1,"message":"175","line":8,"column":2,"nodeType":"176","messageId":"177","endLine":10,"endColumn":3},{"ruleId":"164","severity":1,"message":"178","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":15},{"ruleId":"179","severity":1,"message":"180","line":79,"column":9,"nodeType":"181","endLine":81,"endColumn":12},{"ruleId":"179","severity":1,"message":"180","line":96,"column":9,"nodeType":"181","endLine":96,"endColumn":63},{"ruleId":"179","severity":1,"message":"180","line":115,"column":9,"nodeType":"181","endLine":115,"endColumn":63},{"ruleId":"164","severity":1,"message":"182","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":14},{"ruleId":"164","severity":1,"message":"183","line":5,"column":10,"nodeType":"166","messageId":"167","endLine":5,"endColumn":13},{"ruleId":"164","severity":1,"message":"184","line":5,"column":15,"nodeType":"166","messageId":"167","endLine":5,"endColumn":18},{"ruleId":"174","severity":1,"message":"175","line":10,"column":2,"nodeType":"176","messageId":"177","endLine":12,"endColumn":3},{"ruleId":"164","severity":1,"message":"185","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":26},{"ruleId":"164","severity":1,"message":"186","line":4,"column":10,"nodeType":"166","messageId":"167","endLine":4,"endColumn":19},{"ruleId":"164","severity":1,"message":"187","line":4,"column":31,"nodeType":"166","messageId":"167","endLine":4,"endColumn":36},{"ruleId":"164","severity":1,"message":"188","line":4,"column":38,"nodeType":"166","messageId":"167","endLine":4,"endColumn":43},{"ruleId":"164","severity":1,"message":"189","line":14,"column":3,"nodeType":"166","messageId":"167","endLine":14,"endColumn":10},{"ruleId":"164","severity":1,"message":"190","line":15,"column":3,"nodeType":"166","messageId":"167","endLine":15,"endColumn":10},{"ruleId":"164","severity":1,"message":"191","line":16,"column":3,"nodeType":"166","messageId":"167","endLine":16,"endColumn":23},{"ruleId":"164","severity":1,"message":"192","line":17,"column":3,"nodeType":"166","messageId":"167","endLine":17,"endColumn":17},{"ruleId":"164","severity":1,"message":"193","line":18,"column":3,"nodeType":"166","messageId":"167","endLine":18,"endColumn":15},{"ruleId":"164","severity":1,"message":"194","line":19,"column":3,"nodeType":"166","messageId":"167","endLine":19,"endColumn":15},{"ruleId":"164","severity":1,"message":"195","line":20,"column":3,"nodeType":"166","messageId":"167","endLine":20,"endColumn":13},{"ruleId":"164","severity":1,"message":"196","line":42,"column":15,"nodeType":"166","messageId":"167","endLine":42,"endColumn":22},{"ruleId":"179","severity":1,"message":"180","line":73,"column":5,"nodeType":"181","endLine":73,"endColumn":64},{"ruleId":"164","severity":1,"message":"186","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":19},{"ruleId":"164","severity":1,"message":"197","line":5,"column":10,"nodeType":"166","messageId":"167","endLine":5,"endColumn":14},{"ruleId":"164","severity":1,"message":"198","line":22,"column":8,"nodeType":"166","messageId":"167","endLine":22,"endColumn":22},{"ruleId":"164","severity":1,"message":"199","line":29,"column":8,"nodeType":"166","messageId":"167","endLine":29,"endColumn":15},{"ruleId":"164","severity":1,"message":"200","line":46,"column":21,"nodeType":"166","messageId":"167","endLine":46,"endColumn":33},{"ruleId":"164","severity":1,"message":"201","line":47,"column":10,"nodeType":"166","messageId":"167","endLine":47,"endColumn":23},{"ruleId":"164","severity":1,"message":"202","line":78,"column":10,"nodeType":"166","messageId":"167","endLine":78,"endColumn":21},{"ruleId":"164","severity":1,"message":"203","line":84,"column":9,"nodeType":"166","messageId":"167","endLine":84,"endColumn":20},{"ruleId":"170","severity":1,"message":"171","line":178,"column":22,"nodeType":"172","messageId":"173","endLine":178,"endColumn":24},{"ruleId":"164","severity":1,"message":"204","line":191,"column":9,"nodeType":"166","messageId":"167","endLine":191,"endColumn":23},{"ruleId":"170","severity":1,"message":"171","line":193,"column":33,"nodeType":"172","messageId":"173","endLine":193,"endColumn":35},{"ruleId":"170","severity":1,"message":"171","line":197,"column":34,"nodeType":"172","messageId":"173","endLine":197,"endColumn":36},{"ruleId":"179","severity":1,"message":"180","line":230,"column":17,"nodeType":"181","endLine":239,"endColumn":18},{"ruleId":"179","severity":1,"message":"180","line":303,"column":11,"nodeType":"181","endLine":303,"endColumn":30},{"ruleId":"179","severity":1,"message":"180","line":635,"column":11,"nodeType":"181","endLine":635,"endColumn":56},{"ruleId":"164","severity":1,"message":"186","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":19},{"ruleId":"164","severity":1,"message":"183","line":2,"column":21,"nodeType":"166","messageId":"167","endLine":2,"endColumn":24},{"ruleId":"164","severity":1,"message":"185","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":26},{"ruleId":"164","severity":1,"message":"205","line":8,"column":8,"nodeType":"166","messageId":"167","endLine":8,"endColumn":15},{"ruleId":"179","severity":1,"message":"180","line":179,"column":13,"nodeType":"181","endLine":179,"endColumn":66},{"ruleId":"179","severity":1,"message":"180","line":191,"column":13,"nodeType":"181","endLine":191,"endColumn":66},{"ruleId":"179","severity":1,"message":"180","line":195,"column":13,"nodeType":"181","endLine":195,"endColumn":66},{"ruleId":"179","severity":1,"message":"180","line":214,"column":9,"nodeType":"181","endLine":219,"endColumn":10},{"ruleId":"164","severity":1,"message":"206","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":13},{"ruleId":"174","severity":1,"message":"175","line":7,"column":5,"nodeType":"176","messageId":"177","endLine":9,"endColumn":6},{"ruleId":"179","severity":1,"message":"180","line":23,"column":27,"nodeType":"181","endLine":23,"endColumn":78},{"ruleId":"164","severity":1,"message":"207","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":16},{"ruleId":"164","severity":1,"message":"197","line":4,"column":10,"nodeType":"166","messageId":"167","endLine":4,"endColumn":14},{"ruleId":"164","severity":1,"message":"208","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":23},{"ruleId":"179","severity":1,"message":"180","line":42,"column":15,"nodeType":"181","endLine":42,"endColumn":70},{"ruleId":"179","severity":1,"message":"180","line":53,"column":17,"nodeType":"181","endLine":53,"endColumn":72},{"ruleId":"179","severity":1,"message":"180","line":74,"column":17,"nodeType":"181","endLine":74,"endColumn":72},{"ruleId":"179","severity":1,"message":"180","line":112,"column":17,"nodeType":"181","endLine":112,"endColumn":86},{"ruleId":"179","severity":1,"message":"180","line":22,"column":11,"nodeType":"181","endLine":22,"endColumn":26},{"ruleId":"179","severity":1,"message":"180","line":34,"column":15,"nodeType":"181","endLine":34,"endColumn":61},{"ruleId":"179","severity":1,"message":"180","line":46,"column":15,"nodeType":"181","endLine":46,"endColumn":59},{"ruleId":"179","severity":1,"message":"180","line":57,"column":11,"nodeType":"181","endLine":57,"endColumn":26},{"ruleId":"160","replacedBy":"209"},{"ruleId":"162","replacedBy":"210"},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'TronWeb' is defined but never used.","'FOUNDATION_ADDRESS' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'banner1' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Header' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Component' is defined but never used.","'Container' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'NavbarText' is defined but never used.","'address' is assigned a value but never used.","'Icon' is defined but never used.","'money_transfer' is defined but never used.","'reff_bg' is defined but never used.","'setTableData' is assigned a value but never used.","'walletAddress' is assigned a value but never used.","'copySuccess' is assigned a value but never used.","'textAreaRef' is assigned a value but never used.","'getIfHideTable' is assigned a value but never used.","'Bitcoin' is defined but never used.","'Icon1' is defined but never used.","'Button' is defined but never used.","'BinaryCommision' is defined but never used.",["211"],["212"],"no-global-assign","no-unsafe-negation"]